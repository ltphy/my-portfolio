{"version":3,"sources":["layout/styles.module.scss","pages/contents/portfolio/portfolio.interfaces.ts","context/DrawerOpenProvider/drawerOpenProvider.context.tsx","constants/default_constants.ts","layout/header/index.tsx","context/hash.context.tsx","constants/theme_mode.ts","context/ThemeProvider/theme.context.tsx","pages/contents/stories/stories.constants.ts","pages/contents/stories/index.tsx","pages/contents/about/index.tsx","pages/contents/about/about.interfaces.ts","context/UseContactForm/useContactForm.context.tsx","components/custom_text_field/custom_text_field.tsx","components/custom_alert/custom_alert.tsx","pages/contents/contact/contact_form/contact_form.tsx","pages/contents/contact/contact_links/index.tsx","pages/contents/contact/index.tsx","pages/contents/portfolio/portfolio.constants.ts","pages/contents/portfolio/portfolio-card/PortfolioCard.tsx","pages/contents/portfolio/portfolio.tsx","constants/routes.constant.tsx","components/custom_drawer/list_item_link/list_item_link.tsx","components/custom_drawer/custom_drawer.tsx","layout/index.tsx","App.tsx","serviceWorker.js","index.js","pages/contents/stories/styles.module.scss"],"names":["module","exports","PortfolioTitle","DrawerToggleContext","React","createContext","open","toggleOpen","DrawerToggleProvider","props","Provider","value","drawerToggle","children","useDrawerToggleContext","useContext","drawerWidth","useStyle","makeStyles","theme","menuButton","marginRight","spacing","color","hide","display","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","headerTitle","fontWeight","Header","headerProps","useDrawerToggle","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","console","log","edge","Typography","variant","noWrap","defaultHashValue","hashName","HashContext","HashContextProvider","hashValue","lightTheme","navBar","fontSize","content","fontFamily","toggleButton","toggleBorder","gradient","switchColor","transformLight","transformDark","title","ThemeContext","useThemeContext","fields","withRouter","useTheme","timeoutList","useEffect","typeWriter","setTypeText","forEach","timeout","clearTimeout","useState","typeText","text","textFields","length","slice","prevState","setTimeout","push","Row","style","styles","my_img","title_content","layout_content","page_title","typewriter2","TimelineItem","withStyles","missingOppositeContent","MuiTimelineItem","useStyles","contentWrapper","padding","titleWrapper","textAlign","textTransform","marginBottom","alignItems","flexDirection","paper","timelineDot","background","timelineDotCurrent","timelineConnector","timelineContent","event","boxShadow","bottom","border","borderLeftColor","projectSubTitle","opacity","paperContent","marginTop","projectTitle","iconSection","roleTitle","rightContent","inputWrapper","height","overflowY","scrollWrapper","downloadWrapper","justifyContent","classes","Face","Grid","container","item","xs","Timeline","TimelineSeparator","TimelineDot","TimelineContent","component","TimelineConnector","Paper","elevation","gutterBottom","Button","href","download","startIcon","CloudDownloadOutlined","useContactForm","sendEmail","validationSchema","useMemo","yup","name","required","default","email","message","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","formState","control","onSubmit","useCallback","formValues","a","root","overflow","borderRadius","fade","palette","primary","main","borderColor","error_message","CustomTextField","redditStyles","defaultValue","render","field","onChange","onBlur","TextField","label","multiline","fullWidth","rows","InputProps","disableUnderline","errors","Warning","CustomAlert","buttonWrapper","margin","alignContent","sendButton","buttonProgress","green","top","right","ContactForm","loading","setLoading","timeOut","useRef","successAlert","setSuccessAlert","errorAlert","setErrorAlert","current","emailjs","init","send","closeAlert","type","size","disabled","endIcon","Send","CircularProgress","Snackbar","autoHideDuration","onClose","severity","link_wrapper","links_container","icon","ContactLinks","target","GitHub","Facebook","LinkedIn","Twitter","secondary","contactForm","PhoneAndroid","portfolioList","subTitle","image","category","Web","url","DeepLearning","All","card","imageContent","PortfolioCard","portfolio","to","pathname","Card","onMouseOver","evcnt","CardActionArea","CardMedia","CardContent","filterPortfolio","portfolioContainer","flexWrap","itemWrapper","buttonFilter","routes","Stories","iconRender","HomeOutlined","isPrivate","showHeaderNavBar","path","exact","About","setPortfolioList","selected","setSelected","WorkOutline","Object","values","map","porfolios","filter","onClickFilterButton","TransitionGroup","index","CSSTransition","classNames","Contact","ListItemLink","route","renderLink","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","flexShrink","whiteSpace","drawerPaper","drawerHeader","mixins","toolbar","drawerOpen","drawerClose","breakpoints","up","CustomDrawer","Drawer","anchor","ChevronLeftOutlined","List","Divider","flexGrow","contentShift","MainLayout","App","RenderMainRoute","state","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0039b7e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__BDjbF\"};","export enum PortfolioTitle {\n    All = \"All\",\n    Mobile = \"Mobile App\",\n    Web = \"Web App\",\n    DeepLearning = \"Deep Learning\",\n}\n","import React, {useContext} from \"react\";\nimport {lightTheme, Theme} from \"../../constants/theme_mode\";\n\nexport interface DrawerToggle {\n    open: boolean;\n    toggleOpen: (open: boolean) => void;\n}\n\n// init drwer toggle context\nexport const DrawerToggleContext: React.Context<DrawerToggle> = React.createContext<DrawerToggle>({\n    open: false,\n    toggleOpen: (open) => {\n    }\n});\n\ninterface DrawerToggleProps {\n    children: any;\n    drawerToggle: DrawerToggle;\n}\n\nexport const DrawerToggleProvider = (props: DrawerToggleProps) => {\n    return (\n        <DrawerToggleContext.Provider value={props.drawerToggle}>\n            {props.children}\n        </DrawerToggleContext.Provider>\n    );\n};\n\nexport const useDrawerToggleContext = () => {\n    return useContext<DrawerToggle>(DrawerToggleContext);\n};\n\n","const typeSpeed = 150;\nconst drawerWidth = 240;\nconst serviceID = 'service_jjcha0p';\nconst templateID = 'template_eco4z1r';\nconst userID = 'user_Tyqvr5ZSCefJW9q69Y1SO';\nexport {typeSpeed, drawerWidth, serviceID, templateID, userID};","import React, {useEffect, useState} from 'react';\nimport {SwitchClassKey, SwitchProps} from '@material-ui/core/Switch';\nimport {useThemeContext} from \"../../context/ThemeProvider/theme.context\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from \"@material-ui/core/Typography\";\nimport {useDrawerToggleContext} from \"../../context/DrawerOpenProvider/drawerOpenProvider.context\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from 'clsx';\nimport {drawerWidth} from \"../../constants/default_constants\";\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n    focusVisible?: string;\n}\n\ninterface Props extends SwitchProps {\n    classes: Styles;\n}\n\ninterface HeaderProps {\n    changeNavTab?: (hashNavValue: string) => void;\n    switchTheme?: (theme: boolean) => void;\n}\n\nconst useStyle = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: \"#000000\",\n\n    },\n    hide: {\n        display: 'none'\n    },\n    appBar: {\n        backgroundColor: \"#ffffff\",\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerTitle: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        fontWeight: 900,\n        color: \"#000000\",\n\n    }\n}));\nconst Header = (headerProps: HeaderProps) => {\n\n    // const [themeMode, setThemeMode] = useState<boolean>();\n    // const useTheme = useThemeContext();\n    const useDrawerToggle = useDrawerToggleContext();\n    const theme = useStyle();\n    // const switchThemeMode = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     console.log(event.target.checked);\n    //     setThemeMode(event.target.checked);\n    //     headerProps.switchTheme(event.target.checked);\n    // };\n    //this header is not used to move to other route but instead to move to certain href element\n    return (\n\n        <AppBar position={'fixed'} className={clsx(theme.appBar, {[theme.appBarShift]: useDrawerToggle.open})}>\n            <Toolbar>\n                <IconButton color={\"inherit\"} aria-label={\"open drawer\"}\n                            onClick={() => {\n                                console.log('onCLick', useDrawerToggle.open);\n                                console.log('function', useDrawerToggle.toggleOpen);\n                                useDrawerToggle.toggleOpen(!useDrawerToggle.open);\n                            }} edge=\"start\"\n                            className={clsx(theme.menuButton, useDrawerToggle.open && theme.hide)}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant={'h5'} noWrap className={theme.headerTitle}>\n                    Lieng The Phy\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        // <Navbar expand=\"lg\" sticky={\"top\"} className={styles.nav_wrapper} style={useTheme.navBar}>\n        //     <Container fluid>\n        //         <Col className={styles.brandWrapper}>\n        //             <Navbar.Brand className={styles.brand} style={{\"color\": useTheme.navBar.color}}>\n        //                 Phy Lieng\n        //             </Navbar.Brand>\n        //         </Col>\n        //         {/*To create a toggle button for nav bar*/}\n        //         <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className={styles.toggle}>\n        //             Menu <FontAwesomeIcon icon={faBars}/>\n        //         </Navbar.Toggle>\n        //         <Navbar.Collapse id={\"responsive-navbar-nav\"} className={styles.nav_container}>\n        //             <Nav>\n        //                 {\n        //                     homeRouters.map((route: IHomeRouter, index: number) => {\n        //                         return (\n        //                             route.showHeaderNavBar &&\n        //                             (<Nav.Link className={styles.route} style={{\"color\": useTheme.navBar.color}}\n        //                                        key={route.title} onClick={() => {\n        //                                 headerProps.changeNavTab(route.title);\n        //                             }}>\n        //                                 {route.title}\n        //                             </Nav.Link>)\n        //                         );\n        //                     })\n        //\n        //                 }\n        //\n        //             </Nav>\n        //         </Navbar.Collapse>\n        //\n        //     </Container>\n        // </Navbar>\n    );\n};\nexport default Header;\n","import React, {useContext, useRef} from 'react';\n\nexport interface HashValue {\n    hashName: string;\n}\n\nconst defaultHashValue: HashValue = {hashName: \"\"};\nconst HashContext: React.Context<HashValue> = React.createContext<HashValue>(defaultHashValue);\n\ninterface hashContextProps\n{\n    children: any;\n    hashValue: HashValue;\n}\n\nexport const HashContextProvider = (props: hashContextProps) => {\n    return (\n        <HashContext.Provider value={props.hashValue}>\n            {props.children}\n        </HashContext.Provider>\n    );\n};\n\nexport const useHashRoute = () => {\n    return useContext<HashValue>(HashContext);\n};\n","export interface Theme {\n    navBar: {\n        backgroundColor: string;\n        color: string;\n        transition: string;\n    }\n    content: {\n        backgroundColor: string;\n        color: string;\n        transition: string;\n        fontSize: string;\n        fontFamily: string;\n    }\n    toggleButton: {\n        gradient: string;\n        toggleBorder: string;\n        switchColor: string;\n        transformDark: string;\n        transformLight: string;\n    }\n\n}\n\nexport const lightTheme = {\n    navBar: {\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n        transition: \"all 0.25s linear\",\n        fontSize: \"30rem\",\n    },\n    content: {\n        fontSize: \"16px\",\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n        transition: \"all 0.25s linear\",\n        fontFamily: \"Roboto, sans-serif\",\n    },\n    toggleButton: {\n        toggleBorder: \"black\",\n        // gradient: 'linear-gradient(#39598A, #79D7ED)',\n        gradient: \"#fff\",\n        switchColor: \"#000\",\n        transformLight: \"translateY(0)\",\n        transformDark: \"translateY(-100px)\"\n    },\n    title: {}\n};\n\nexport const darkTheme = {\n    content: {\n        backgroundColor: \"#18191a\",\n        color: \"#b0b3b8\",\n        transition: \"all 0.25s linear\",\n        fontSize: \"16px\",\n        fontFamily: \"Roboto, sans-serif\",\n    },\n    navBar: {\n        backgroundColor: \"#242526\",\n        color: \"#b0b3b8\",\n        transition: \"all 0.25s linear\",\n    },\n    toggleButton: {\n        toggleBorder: \"#fff\",\n        // gradient: \"linear-gradient(#091236, #1E215D)\",\n        gradient: \"#000\",\n        switchColor: \"#fff\",\n        transformLight: \"translateY(100px)\",\n        transformDark: \"translateY(0)\",\n    }\n\n};\n\n\n","import React, {Context, useContext} from 'react';\nimport {lightTheme, Theme} from \"../../constants/theme_mode\";\n\nexport const ThemeContext: React.Context<Theme> = React.createContext<Theme>(lightTheme);\n\ninterface ThemeContextProps {\n    children: any;\n    theme: Theme;\n}\n\nexport const ThemeProvider = (props: ThemeContextProps) => {\n    return (\n        <ThemeContext.Provider value={props.theme}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n\n};\nexport const useThemeContext = () => {\n    return useContext<Theme>(ThemeContext);\n};\n\n\n\n\n","export const fields = [\"a software engineer\", \"a writer\", \"a knowledge seeker\", \"a fitness freak\", \"a manga lover\"];","import React, {useEffect, useState} from \"react\";\nimport styles from \"./styles.module.scss\";\nimport {useThemeContext} from \"../../../context/ThemeProvider/theme.context\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {fields} from \"./stories.constants\";\nimport {typeSpeed} from \"../../../constants/default_constants\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Stories = () => {\n    //will render\n    const useTheme = useThemeContext();\n    let timeoutList: NodeJS.Timeout[] = [];\n    useEffect(() => {\n        const typeWriterTimeOut = typeWriter(fields[0], fields);\n        // typeWriter2();\n        return () => {\n            setTypeText('');\n            timeoutList.forEach((timeout) => clearTimeout(timeout));\n        };\n    }, []);\n    const [typeText, setTypeText] = useState<string>('');\n\n    const typeWriter = (text: string, textFields: string[]) => {\n        if (text.length === 0) {\n            // remove the previous value\n            setTypeText('');\n            textFields = textFields.slice(1);\n            if (textFields.length === 0)\n                textFields = fields;\n            typeWriter(textFields[0], textFields);\n\n        } else {\n            setTypeText((prevState => {\n                return prevState + text[0];\n            }));\n            const timeout = setTimeout(() => typeWriter(text.slice(1), textFields), typeSpeed);\n            timeoutList.push(timeout);\n        }\n    };\n\n    return (<Row style={useTheme.content}>\n        <div className={styles.my_img}>\n\n        </div>\n        <div className={styles.title_content}>\n            <div className={styles.layout_content}>\n                <h4>\n                    Hi, I am\n                </h4>\n                <h2 className={styles.page_title}>\n                    Lieng The Phy\n                </h2>\n                <h4>\n                    I am {' '}\n                    <strong className={styles.typewriter2}>\n                        {typeText}\n                    </strong>\n                </h4>\n            </div>\n        </div>\n    </Row>);\n};\nexport default withRouter(Stories);\n","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {CloudDownloadOutlined, Face} from \"@material-ui/icons\";\nimport {Button, Grid, Typography, withStyles} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport LaptopMacIcon from \"@material-ui/icons/LaptopMac\";\n\nimport {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem as MuiTimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {withRouter} from \"react-router\";\nimport {downloadURL} from \"./about.interfaces\";\n\nconst TimelineItem = withStyles({\n    missingOppositeContent: {\n        \"&:before\": {\n            display: \"none\"\n        }\n    }\n})(MuiTimelineItem);\n\nconst useStyles = makeStyles((theme) => ({\n    contentWrapper: {\n        padding: '80px',\n    },\n    titleWrapper: {\n        textAlign: 'center',\n        '& > *': {\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n\n            '&:first-child': {\n                fontSize: '3rem',\n            },\n            '&:not(:first-child)': {\n                marginBottom: '12px',\n                padding: '5px 8px',\n            }\n        }\n    },\n    title: {\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        marginBottom: '12px',\n        padding: '5px 8px'\n    },\n    content: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n\n    paper: {\n        padding: theme.spacing(1),\n    },\n    timelineDot: {\n        color: 'white',\n        background: 'white'\n    },\n    timelineDotCurrent: {\n        background: '#0057D9'\n    },\n    timelineConnector: {\n        color: 'white',\n        background: 'white'\n    },\n    timelineContent: {\n        marginLeft: '10px',\n    },\n    event: {\n        position: 'relative',\n\n        '& h3': {\n            color: '#fff',\n            padding: '3px 8px',\n            marginBottom: '1.5em',\n            background: '#0057D9',\n            width: 'max-content',\n            fontSize: '14px',\n            marginLeft: '30px',\n            boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n\n            '&::before': {\n                content: '\"\"',\n                bottom: '0',\n                position: 'absolute',\n                border: '11px solid #0057D9!important',\n                borderLeftColor: 'transparent !important',\n                display: 'block',\n                marginLeft: '-35px',\n            }\n        },\n    },\n    projectSubTitle: {\n        fontWeight: 700,\n        color: '#0057D9',\n        opacity: 0.8,\n        fontSize: '14px',\n        marginBottom: '5px'\n    },\n\n    paperContent: {\n        padding: '8px 12px',\n        marginBottom: '8px',\n        marginTop: '8px',\n        fontSize: '14px',\n        '& div': {\n            '&$projectTitle': {\n                fontSize: '15px',\n                fontWeight: 700,\n                color: '#0057D9',\n                '&:not(:first-child)': {marginTop: '10px'}\n\n            }\n        }\n    },\n    projectTitle: {},\n    iconSection: {\n        backgroundColor: '#0057D9'\n    },\n    roleTitle: {\n        textTransform: 'uppercase',\n        fontWeight: 'bold'\n    },\n    rightContent: {\n        marginTop: '1rem'\n    },\n    inputWrapper: {\n        width: '100px',\n        '&$scrollWrapper': {\n            height: '200px',\n            overflowY: 'scroll'\n        }\n    },\n    scrollWrapper: {},\n    downloadWrapper: {\n        marginTop: '3rem',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n\n}));\n\nconst About = () => {\n    const classes = useStyles();\n\n    const drawTimeLines = () => {\n        return (<>\n            <Timeline>\n                <TimelineItem>\n                    <TimelineSeparator>\n                        <TimelineDot className={classes.iconSection}>\n                            <LaptopMacIcon fontSize={'large'}/>\n\n                        </TimelineDot>\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        <Typography className={classes.title} variant={'h5'} component={'h1'}>\n                            CODE HISTORY\n                        </Typography>\n\n                    </TimelineContent>\n\n                </TimelineItem>\n                <div className={classes.timelineContent}>\n                    <TimelineItem>\n                        <TimelineSeparator>\n\n                            <TimelineDot className={classes.timelineDotCurrent}/>\n                            <TimelineConnector className={classes.timelineConnector}/>\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <div className={classes.event}>\n                                <h3>Nov 2020 - current</h3>\n                            </div>\n\n                            <Typography className={classes.roleTitle}>software engineer</Typography>\n                            <div> ZMP VN Inc.</div>\n\n                            <Paper elevation={4} className={classes.paperContent}>\n                                <div className={classes.projectTitle}> ForkApp - 95%\n                                </div>\n                                <p> - A flutter app communicates with Redis Server to command fork lift robots.</p>\n                                <div className={classes.projectTitle}> Deep learning project - 70%\n                                </div>\n                                <div> - 3D Object Detection using point clouds.</div>\n                                <div> - Modify existing repository for the project's use case and provide a solution\n                                    for real time processing.\n                                </div>\n\n                                <div className={classes.projectTitle}> Zimulator - 30%\n                                </div>\n                                <p>\n                                    - A Reactjs project to simulate XML structure as a config for Gazebo simulator,\n                                    written in Typescript.\n                                </p>\n\n                                <div className={classes.projectTitle}> Other side projects\n                                </div>\n                                <div className={classes.projectSubTitle}>\n                                    ZMapEditor - Reactjs - 5%\n                                </div>\n                                <span> - Using Geojson and Nebula.gl to implement some custom features to draw traffic map.</span>\n                                <div className={classes.projectSubTitle}>\n                                    Taisei project - Reactjs - 1%\n                                </div>\n                                <span> - Create a chat room for different company roles to communicate with each other to register robot.</span>\n\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n\n                    <TimelineItem>\n                        <TimelineSeparator>\n\n                            <TimelineDot className={classes.timelineDot}/>\n                            <TimelineConnector className={classes.timelineConnector}/>\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <div className={classes.event}>\n                                <h3>June 2018 - April 2019</h3>\n                            </div>\n                            <Typography className={classes.roleTitle}> R&D DEVELOPER </Typography>\n                            <div> BeeSight Soft Inc.</div>\n\n                            <Paper elevation={4} className={classes.paperContent}>\n                                <div className={classes.projectTitle}>\n                                    Projects about face detections and recognitions - 95%\n                                </div>\n\n                                <div>\n                                    - Create a machine learning game by merging jsTensorflow and Unity Game 2D using\n                                    WebSocket.\n                                </div>\n                                <div>\n                                    - Implement face recognition on a Raspberry Pi 3.0.\n                                </div>\n                                <div>\n                                    - Work with Unity and Android to create a Snapchat-lookalike project.\n                                </div>\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                </div>\n            </Timeline></>);\n    };\n    const renderEducationTimeline = () => {\n        return (<Timeline>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot className={classes.iconSection}>\n                        <LaptopMacIcon fontSize={'large'}/>\n                    </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Typography className={classes.title} variant={'h5'} component={'h1'}>\n                        Education history\n                    </Typography>\n                </TimelineContent>\n\n            </TimelineItem>\n            <div className={classes.timelineContent}>\n                <TimelineItem>\n                    <TimelineSeparator>\n                        <TimelineDot className={classes.timelineDot}/>\n                        <TimelineConnector className={classes.timelineConnector}/>\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        <div className={classes.event}>\n                            <h3>June 2018 - April 2019</h3>\n                        </div>\n                        <Typography className={classes.roleTitle}> Computer science student</Typography>\n                        <div>HCMUS-University of science</div>\n                        <Paper className={classes.paperContent}>\n                            <div className={classes.projectTitle}> Bachelor of Computer Science, 2019</div>\n                            <div> - Graduated with GPA 8.89</div>\n                            <div> - Student of Advanced Program in Computer Science</div>\n                            <div> - IELTS band 6.5</div>\n                        </Paper>\n\n                    </TimelineContent>\n                </TimelineItem>\n            </div>\n        </Timeline>);\n    };\n    const skillContent = () => {\n        return (\n            <div className={classes.rightContent}>\n                <Typography variant={'h5'}\n                            component={'h1'}\n                            gutterBottom\n                            className={classes.title}\n                            style={{marginTop: '5.3em'}}\n                >Areas of\n                    Expertise</Typography>\n\n                <Paper className={classes.paperContent}>\n                    <ul>\n                        <li> Flutter</li>\n                        <li> ReactJS written in TypeScript</li>\n                        <li> Javascript, C++, and Python experience</li>\n                        <li> NodeJS back-end (Auth and Restfull API)</li>\n                        <li> HTML, CSS</li>\n                    </ul>\n\n                </Paper>\n                <Typography variant='h5'\n                            component={'h1'}\n                            gutterBottom\n                            className={classes.title}\n                            style={{marginTop: '2.5em'}}\n                >WORK\n                    SKILLS</Typography>\n                <Paper className={classes.paperContent}>\n                    <ul>\n                        <li> Have fundamental knowledge of Data Structures and Algorithms.</li>\n                        <li> Detail oriented, team player</li>\n                        <li> Problem solver by presenting and understanding the flow of code.</li>\n                        <li> Tasks breakdown, product mindset</li>\n                        <li> Strong self-learning ability but always eager to ask.</li>\n                    </ul>\n                </Paper>\n                <div className={classes.downloadWrapper}>\n                    <Button href={downloadURL} download='cv' variant={'contained'} color=\"primary\"\n                            startIcon={<CloudDownloadOutlined/>}\n                    >\n                        Download CV\n                    </Button>\n                </div>\n\n            </div>);\n    };\n\n    return (<div className={classes.contentWrapper}>\n        <div className={classes.titleWrapper}>\n            <div>\n                <Face fontSize={'large'}/>\n            </div>\n            <h1>\n                RESUME\n            </h1>\n\n        </div>\n        <div className={classes.content}>\n            <Grid container>\n                <Grid item xs={6}>\n                    {drawTimeLines()}\n                    {renderEducationTimeline()}\n                </Grid>\n                <Grid item xs={6}>\n                    {skillContent()}\n                </Grid>\n\n            </Grid>\n        </div>\n    </div>);\n};\nexport default withRouter(About);\n","export const downloadURL = \"https://drive.google.com/uc?id=1_W-ZpzuJs2pVv9q8rfEX8SqVjhy-tSlM&export=download\";\n","import {ReactElement, useCallback, useMemo} from \"react\";\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport emailjs from 'emailjs-com';\nimport {serviceID, templateID, userID} from \"../../constants/default_constants\";\n\ninterface ContactInterface {\n    name: string;\n    email: string;\n    message: string;\n}\ninterface useContactFormProps {\n    sendEmail: (formValues: any) => void;\n}\nconst useContactForm = ({sendEmail}: useContactFormProps) => {\n    const validationSchema = useMemo(() => {\n        return yup.object({\n            name: yup.string().required('Name is required').default(''),\n            email: yup.string().email().required('Email is required').default(''),\n            message: yup.string().required('Message is required').default(''),\n        });\n    }, []);\n    const {handleSubmit, formState, control} = useForm<ContactInterface>({\n        resolver: yupResolver(validationSchema), defaultValues: validationSchema.cast({})\n    });\n\n    const onSubmit = useCallback(async (formValues) => {\n        await sendEmail(formValues);\n    }, []);\n\n    return {control, onSubmit: handleSubmit(onSubmit), formState};\n\n\n};\n\nexport default useContactForm;","import React from 'react';\nimport {fade, makeStyles, TextField} from \"@material-ui/core\";\nimport {Control, Controller} from \"react-hook-form\";\nimport {ErrorMessage} from \"@hookform/error-message\";\nimport {Warning} from \"@material-ui/icons\";\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        border: '1px solid #e2e2e1',\n        overflow: \"hidden\",\n        borderRadius: 4,\n        backgroundColor: '#fcfcfc',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        marginBottom: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: '#fff'\n        },\n        '&$focused': {\n            backgroundColor: '#fff',\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n            borderColor: theme.palette.primary.main\n        }\n\n    },\n    error_message: {\n        color: '#F20505',\n    }\n\n}));\n\ninterface CustomTextFieldProps {\n    name: string;\n    control: Control<Record<string, any>>;\n    label: string;\n    defaultValue?: string;\n    errors?: any;\n    multiline?: boolean;\n    rows?: number;\n}\n\nconst CustomTextField = (props: CustomTextFieldProps) => {\n\n    const redditStyles = useStyle();\n    return (<div>\n        <Controller name={props.name}\n                    control={props.control}\n                    defaultValue={props.defaultValue || ''}\n                    render={({field: {onChange, onBlur, value}}) => {\n                        return (<TextField onChange={onChange}\n                                           onBlur={onBlur}\n                                           value={value}\n                                           label={props.label}\n                                           multiline={props.multiline}\n                                           fullWidth\n                                           variant={'filled'}\n                                           rows={props.rows}\n                                           InputProps={{classes: {root: redditStyles.root}, disableUnderline: true}}\n                        />);\n                    }}/>\n        <div className={redditStyles.error_message}>\n            {props.errors[props.name] != null ?\n                <>\n                    <Warning fontSize={'small'}/>\n                    <ErrorMessage errors={props.errors} name={props.name}/>\n                </>\n                : <></>}\n        </div>\n\n    </div>);\n};\nexport default CustomTextField;","import React, {ReactElement} from \"react\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {AlertProps} from \"@material-ui/lab/Alert/Alert\";\n\nexport const CustomAlert = (props: AlertProps): ReactElement => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};","import React, {useEffect, useRef, useState} from 'react';\nimport useContactForm from '../../../../context/UseContactForm/useContactForm.context';\nimport {Button, CircularProgress, makeStyles, Snackbar} from \"@material-ui/core\";\nimport CustomTextField from \"../../../../components/custom_text_field/custom_text_field\";\nimport {Send} from '@material-ui/icons';\nimport Paper from \"@material-ui/core/Paper\";\nimport {green} from '@material-ui/core/colors';\nimport {serviceID, templateID, userID} from '../../../../constants/default_constants';\nimport emailjs from 'emailjs-com';\nimport {CustomAlert} from \"../../../../components/custom_alert/custom_alert\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    buttonWrapper: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center',\n        justifyContent: 'center',\n        position: 'relative',\n    },\n    sendButton: {\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        color: \"white\"\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        right: '50%',\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nconst ContactForm = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const timeOut = useRef<NodeJS.Timeout>();\n    const [successAlert, setSuccessAlert] = useState<boolean>(false);\n    const [errorAlert, setErrorAlert] = useState<boolean>(false);\n    useEffect(() => {\n\n        return () => {\n            if (timeOut.current) {\n                clearTimeout(timeOut.current);\n            }\n\n        };\n    }, []);\n    const sendEmail = async (formValues: any) => {\n        console.log(formValues);\n        setLoading(true);\n        emailjs.init(userID);\n        try {\n            const value = await emailjs.send(serviceID, templateID, formValues);\n            setSuccessAlert(true);\n\n        } catch (error) {\n            setErrorAlert(true);\n            console.log(error.text);\n        }\n        setLoading(false);\n    };\n\n    const {control, onSubmit, formState} = useContactForm({sendEmail: sendEmail});\n    const classes = useStyles();\n    const closeAlert = ()=>{\n        if(successAlert) {\n            setSuccessAlert(false);\n        }\n        if(errorAlert) {\n            setErrorAlert(false);\n        }\n    };\n\n    return (<div>\n        <form onSubmit={onSubmit} name={'send'}>\n            <Paper elevation={4} className={classes.paper}>\n\n\n                <CustomTextField control={control} name={'name'} label={'Name'} errors={formState.errors}/>\n\n                <CustomTextField control={control} name={'email'} label={'Email'} errors={formState.errors}/>\n\n                <CustomTextField control={control} name={'message'} label={'Message'} multiline\n                                 errors={formState.errors} rows={5}/>\n                <div className={classes.buttonWrapper}>\n                    <Button\n                        className={classes.sendButton}\n                        type=\"submit\"\n                        size={'large'}\n                        name='send'\n                        variant=\"contained\"\n                        disabled={loading}\n                        endIcon={<Send/>}\n                    >\n                        Send\n\n                    </Button>\n                    {loading && <CircularProgress size={20} className={classes.buttonProgress}/>}\n                </div>\n            </Paper>\n        </form>\n        <Snackbar open={successAlert} autoHideDuration={6000} onClose={closeAlert}>\n\n        <CustomAlert severity='success' onClose={closeAlert}>Email sent successfully!</CustomAlert>\n           </Snackbar>\n        <Snackbar  open={errorAlert} autoHideDuration={6000} onClose={closeAlert}>\n            <CustomAlert  severity='error' onClose={closeAlert}>Failed to send email!</CustomAlert>\n        </Snackbar>\n\n    </div>);\n}\nexport default ContactForm;","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Theme} from '@material-ui/core/styles/createMuiTheme';\nimport Paper from \"@material-ui/core/Paper\";\nimport {IconButton} from \"@material-ui/core\";\nimport {BrightnessMediumOutlined, Facebook, GitHub, LinkedIn, Twitter} from '@material-ui/icons';\nimport { ReactComponent as YourSvg } from './your-svg.svg';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    link_wrapper: {\n        display: 'contents',\n\n    },\n    links_container: {\n        height: '20vh',\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    icon: {\n        marginRight: theme.spacing(2)\n    }\n}));\n\nconst ContactLinks = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.link_wrapper}>\n        <Paper className={classes.links_container} elevation={4}>\n            <a href={'https://github.com/ltphy'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <GitHub/>\n                </IconButton>\n            </a>\n            <a href={'https://www.facebook.com/the.phy.9'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <Facebook/>\n                </IconButton>\n            </a>\n            <a href={'https://www.linkedin.com/in/phy-lieng-7872a910b/'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <LinkedIn/>\n                </IconButton>\n\n            </a>\n            <a href={'https://www.linkedin.com/in/phy-lieng-7872a910b/'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <Twitter/>\n                </IconButton>\n\n            </a>\n            <a href={'https://medium.com/@phylieng97'} target={'_blank'}>\n                <IconButton>\n                    <i className=\"fab fa-medium\"/>\n\n                </IconButton>\n            </a>\n\n        </Paper></div>);\n};\nexport default ContactLinks;","import React from \"react\";\nimport styles from \"./styles.module.scss\";\nimport {useThemeContext} from \"../../../context/ThemeProvider/theme.context\";\nimport Grid from '@material-ui/core/Grid';\nimport {Divider, Paper} from \"@material-ui/core\";\nimport ContactForm from \"./contact_form/contact_form\";\nimport ContactLinks from \"./contact_links\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {withRouter} from \"react-router\";\nimport {PhoneAndroid, WorkOutline} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        '& b': {\n            color: theme.palette.text.primary,\n        }\n    },\n    contactForm: {\n        marginTop: '2rem',\n    },\n    contentWrapper: {\n        padding: '80px',\n    },\n    title: {\n        fontWeight: 'bold'\n    },\n    titleWrapper: {\n        textAlign: 'center',\n        '& > *': {\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n\n            '&:first-child': {\n                fontSize: '3rem',\n            },\n            '&:not(:first-child)': {\n                marginBottom: '12px',\n                padding: '5px 8px',\n            }\n        }\n    },\n}));\n\nconst Contact = () => {\n\n    const theme = useThemeContext();\n    const classes = useStyles();\n    const changeDate = () => {\n\n    };\n    return (<div className={classes.contentWrapper}>\n        <div className={classes.titleWrapper}>\n            <div>\n                <PhoneAndroid fontSize=\"large\"/>\n            </div>\n            <h1 className={classes.title}> Get in Touch</h1>\n        </div>\n\n        <h3 className={classes.title}>Contact me</h3>\n        <Grid container spacing={4}>\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <b>\n                        Email\n                    </b>\n\n                    <div>\n                        phylieng97@gmail.com\n                    </div>\n                </Paper>\n\n            </Grid>\n\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <b>\n                        Phone\n                    </b>\n\n                    <div>\n                        Not available\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <b> Freelance\n                    </b>\n                    <div>\n                        Not available\n                    </div>\n                </Paper>\n            </Grid>\n        </Grid>\n        <div className={classes.contactForm}>\n            <h3 className={classes.title}>Send me message</h3>\n            <ContactForm/>\n        </div>\n\n\n        <ContactLinks/>\n        <div>\n\n        </div>\n    </div>);\n};\nexport default withRouter(Contact);\n","import {PortfolioContent} from \"./portfolio-card/PortfolioCard.interfaces\";\nimport {PortfolioTitle} from \"./portfolio.interfaces\";\n\nexport const portfolioList: PortfolioContent[] = [\n    {\n        title: 'My Portfolio',\n        subTitle: 'Portfolio website to track my working progress.',\n        image: '/images/portfolio.gif',\n        category: PortfolioTitle.Web,\n        url: ''\n    },\n    {\n        title: 'OpenPCDet',\n        subTitle: 'Contribute to an open-source research project.',\n        image: '/images/deeplearning_contribute.png',\n        category: PortfolioTitle.DeepLearning,\n        url: 'https://github.com/open-mmlab/OpenPCDet'\n    },\n    {\n        title: 'Garbage Collector',\n        subTitle: 'A AI Game using Teachable Machine and Unity.',\n        image: '/images/game.gif',\n        category: PortfolioTitle.All,\n        url: 'https://medium.com/@phylieng97/create-machine-learning-game-by-joining-jstensorflow-and-unity-together-using-websocket-ca00982bca46'\n    },\n];","import {makeStyles, Card, CardActionArea, CardMedia, CardContent, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {PortfolioContent} from \"./PortfolioCard.interfaces\";\nimport {Link} from 'react-router-dom';\n\ninterface PortfolioCardProps {\n    portfolio: PortfolioContent;\n}\n\nconst useStyles = makeStyles({\n    card: {\n        width: '400px',\n    },\n    imageContent: {\n        height: '300px',\n    },\n\n});\nexport const PortfolioCard = ({portfolio}: PortfolioCardProps) => {\n    const {title, subTitle, image, category, url} = portfolio;\n    const classes = useStyles();\n    const onMouseOverPortfolio = (evcnt: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n\n    };\n\n\n    return (\n        <Link to={{pathname: url}} target='_blank'>\n            <Card className={classes.card} onMouseOver={onMouseOverPortfolio} elevation={3}>\n                <CardActionArea>\n\n                    <CardMedia\n                        className={classes.imageContent}\n                        title={title}\n                        image={image}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                            {subTitle}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Link>\n\n    );\n};","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React, {useEffect, useRef, useState} from 'react';\nimport {WorkOutline} from \"@material-ui/icons\";\nimport {Button, Card, Grid} from \"@material-ui/core\";\nimport {PortfolioTitle} from \"./portfolio.interfaces\";\nimport {portfolioList} from \"./portfolio.constants\";\nimport {PortfolioCard} from \"./portfolio-card/PortfolioCard\";\nimport {PortfolioContent} from \"./portfolio-card/PortfolioCard.interfaces\";\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport './styles.css';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        '& b': {\n            color: theme.palette.text.primary,\n        }\n    },\n    contactForm: {\n        marginTop: '2rem',\n    },\n    contentWrapper: {\n        padding: '80px',\n    },\n    title: {\n        textAlign: 'center',\n        '& > *': {\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n\n            '&:first-child': {\n                fontSize: '3rem',\n            },\n            '&:not(:first-child)': {\n                marginBottom: '12px',\n                padding: '5px 8px',\n            }\n        }\n    },\n    filterPortfolio: {\n        margin: '20px 10px',\n        display: \"flex\",\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: 'center'\n    },\n    portfolioContainer: {\n        width: '80%',\n        margin: '8em auto',\n        display: \"flex\",\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: 'flex-start',\n        flexWrap: 'wrap',\n        '&.empty': {\n            height: '100vh',\n            alignItems: \"flex-start\",\n        }\n    },\n    itemWrapper: {\n        padding: '1%'\n    },\n    buttonFilter: {\n        '&:focus': {\n            borderColor: 'transparent'\n        }\n    },\n\n}));\nconst Portfolio = () => {\n    const classes = useStyles();\n    const [filterPortfolio, setPortfolioList] = useState<PortfolioContent[]>(portfolioList);\n    const [selected, setSelected] = useState<string>(PortfolioTitle.All);\n\n    const onClickFilterButton = (value: string) => {\n        setSelected(value);\n        if (value === PortfolioTitle.All) {\n            setPortfolioList(portfolioList);\n            return;\n        }\n        const porfolios = portfolioList.filter((portfolio) => portfolio.category === value);\n\n        setPortfolioList(porfolios);\n    };\n\n    const renderPortfolioCards = () => {\n        return filterPortfolio.map((portfolio, index) => {\n            return (\n                <CSSTransition\n                    key={portfolio.title}\n                    classNames={'portfolio'}\n                    timeout={300}\n                >\n                    <div className={classes.itemWrapper}>\n                        <PortfolioCard portfolio={portfolio}/>\n                    </div>\n                </CSSTransition>\n            );\n        });\n    };\n\n    return (<div className={classes.contentWrapper}>\n        <div className={classes.title}>\n            <div>\n                <WorkOutline fontSize=\"large\"/>\n            </div>\n            <h1>Portfolio</h1>\n        </div>\n        <div>\n            <div className={classes.filterPortfolio}>\n                {Object.values(PortfolioTitle).map((value) => {\n                    return <Button variant={selected === value ? \"contained\" : \"text\"}\n                                   key={value}\n                                   color='primary'\n                                   className={classes.buttonFilter}\n                                   onClick={() => onClickFilterButton(value)}>{value}</Button>\n                })}\n            </div>\n            <TransitionGroup className={`${classes.portfolioContainer} ${filterPortfolio.length === 0 ? 'empty' : ''}`}>\n                {renderPortfolioCards()}\n            </TransitionGroup>\n\n        </div>\n    </div>);\n};\nexport default Portfolio;","import Stories from \"../pages/contents/stories\";\nimport About from \"../pages/contents/about\";\nimport {Face, HomeOutlined, PhoneAndroid, WorkOutline} from '@material-ui/icons/';\nimport React from \"react\";\nimport Contact from \"../pages/contents/contact\";\nimport Portfolio from \"../pages/contents/portfolio/portfolio\";\n\nexport interface IRouter {\n    component: any;\n    iconRender: any,\n    isPrivate: boolean,\n    title: string,\n    showHeaderNavBar: boolean,\n    path: string,\n    exact: boolean,\n}\n\nexport const routes: IRouter[] = [\n    {\n        component: Stories,\n        iconRender: () => {\n            return (<HomeOutlined/>);\n        },\n        isPrivate: false,\n        title: \"HOME\",\n        showHeaderNavBar: true,\n        path: \"/\",\n        exact: true\n    },\n    {\n        component: About,\n        iconRender: () => {\n            return (<Face/>);\n        },\n        isPrivate: false,\n        title: \"ABOUT\",\n        showHeaderNavBar: true,\n        path: \"/about\",\n        exact: true\n\n    },\n    {\n        component: Portfolio,\n        iconRender: () => {\n            return (<WorkOutline/>);\n        },\n        isPrivate: false,\n        title: \"PORTFOLIO\",\n        showHeaderNavBar: true,\n        path: \"/portfolio\",\n        exact: true\n    },\n    {\n        component: Contact,\n        iconRender: () => {\n            return (<PhoneAndroid/>);\n        },\n        isPrivate: false,\n        title: \"CONTACT\",\n        showHeaderNavBar: true,\n        path: \"/contact\",\n        exact: true\n    },\n];\n","import React, {forwardRef, useMemo} from 'react';\nimport {ListItemIcon} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {IRouter} from \"../../../constants/routes.constant\";\n\ninterface ListItemLinkProps {\n    route: IRouter\n}\n\nconst ListItemLink = (props: ListItemLinkProps) => {\n    // get the render item =>\n    const {route} = props;\n    const {path, iconRender, title} = route;\n    // update render Link whenever to change the route\n    const renderLink = useMemo(() => {\n        return forwardRef((itemProps, ref: any) => <RouterLink to={{pathname: path}}\n                                                               ref={ref} {...itemProps}/>);\n    }, [path]);\n    return (\n        <ListItem button component={renderLink}>\n            <ListItemIcon> {iconRender()}</ListItemIcon>\n            <ListItemText primary={title}/>\n        </ListItem>\n    );\n};\nexport default ListItemLink;","import React from \"react\";\nimport Drawer from '@material-ui/core/Drawer';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {drawerWidth} from \"../../constants/default_constants\";\nimport {useDrawerToggleContext} from \"../../context/DrawerOpenProvider/drawerOpenProvider.context\";\nimport {IconButton, ListItemIcon} from \"@material-ui/core\";\nimport {ChevronLeftOutlined} from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport {IRouter, routes} from \"../../constants/routes.constant\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport clsx from \"clsx\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ListItemLink from \"./list_item_link/list_item_link\";\nimport {Switch} from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // theme.spacing default 8px x 7 for icon\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1\n        },\n        // property specifies whether to clip the content, add a scroll bar, or display overflow content of a block-level element.\n\n        overflowX: \"hidden\"\n\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignContent: 'center',\n        padding: theme.spacing(1, 1),\n\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar\n    }\n}));\n\nconst CustomDrawer = () => {\n    const theme = useStyles();\n    const useDrawerToggle = useDrawerToggleContext();\n\n    return (\n        <Drawer\n            className={clsx(theme.drawer, {\n                [theme.drawerOpen]: useDrawerToggle.open,\n                [theme.drawerClose]: !useDrawerToggle.open\n            })}\n            classes={{\n                paper: clsx({\n                    [theme.drawerOpen]: useDrawerToggle.open,\n                    [theme.drawerClose]: !useDrawerToggle.open,\n                }),\n            }}\n            open={useDrawerToggle.open}\n            variant={'permanent'}\n            anchor={'left'}\n\n        >\n            <div className={theme.toolbar}>\n                <IconButton onClick={() => {\n                    useDrawerToggle.toggleOpen(false);\n                }}>\n                    <ChevronLeftOutlined/>\n                </IconButton>\n            </div>\n            <List>\n                {\n                    routes.map((route: IRouter, index: number) => {\n                            return (<> <ListItemLink key={route.title} route={route}/>\n                                    <Divider/>\n                                </>\n                            );\n                        }\n                    )\n\n                }\n            </List>\n        </Drawer>);\n};\n\nexport default CustomDrawer;","import React, {useRef, useState} from 'react';\nimport Header from './header';\nimport {HashContextProvider, HashValue} from \"../context/hash.context\";\nimport {makeStyles, ThemeProvider, useTheme} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {useDrawerToggleContext} from \"../context/DrawerOpenProvider/drawerOpenProvider.context\";\nimport CustomDrawer from \"../components/custom_drawer/custom_drawer\";\nimport style from './styles.module.scss';\n\ninterface layoutProps {\n    children: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        color: \"white\",\n        height: '100%'\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\nconst MainLayout = (props: layoutProps) => {\n    //set context here so that I dont need to pass prop etc\n    const [hashValue, setHashValue] = useState<HashValue>({hashName: \"\"});\n    const useDrawerToggle = useDrawerToggleContext();\n    const classes = useStyles();\n    // const setHashNavValue = (hashNav: string) => {\n    //     //because this is a new object => and there fore force rerender\n    //     //if use a normal string It wont force rerender because of React\n    //     const newHashValue: HashValue = {hashName: hashNav};\n    //     setHashValue(newHashValue);\n    // };\n\n    return (\n            <div className={style.root}>\n                <Header/>\n                <CustomDrawer/>\n                <HashContextProvider hashValue={hashValue}>\n                    <main className={clsx(classes.content, {[classes.contentShift]: useDrawerToggle.open})}>\n                        {props.children}\n                    </main>\n\n                </HashContextProvider>\n            </div>);\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport './App.css';\nimport MainLayout from \"./layout\";\nimport {BrowserRouter, MemoryRouter, Route, Switch} from 'react-router-dom';\nimport {IRouter, routes} from \"./constants/routes.constant\";\nimport {DrawerToggleProvider} from \"./context/DrawerOpenProvider/drawerOpenProvider.context\";\n\ninterface AppProps {\n}\n\ninterface AppState {\n    open: boolean;\n    toggleOpen: (open: boolean) => void;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    constructor(props: AppProps) {\n        super(props);\n        // toggle open\n        const toggleOpen = (open: boolean) => {\n            this.setState({open: open});\n        };\n        this.state = {\n            open: false,\n            toggleOpen: toggleOpen,\n        }\n    }\n\n    RenderMainRoute = () => {\n        return (\n            <Switch>\n                {\n                    routes.map((route: IRouter, index: number) => {\n                        return (\n                            <Route path={route.path}\n                                   exact={route.exact}\n                                   key={route.title}\n                                   render={() => <route.component/>}\n                            />\n                        );\n                    })\n                }\n            </Switch>\n        );\n    };\n\n    render() {\n        return (\n            <BrowserRouter>\n                <DrawerToggleProvider drawerToggle={this.state}>\n                    <MainLayout>\n                        <this.RenderMainRoute/>\n                    </MainLayout>\n                </DrawerToggleProvider>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_img\":\"styles_my_img__2IK6f\",\"title_content\":\"styles_title_content__1VrjM\",\"layout_content\":\"styles_layout_content__2CmHI\",\"typewrapper\":\"styles_typewrapper__2CFXV\",\"page_title\":\"styles_page_title__1fZpc\",\"typewriter2\":\"styles_typewriter2__2gB0V\",\"blink\":\"styles_blink__2l_rI\",\"typewriter\":\"styles_typewriter__FEhP2\",\"typing\":\"styles_typing__AeMIY\",\"blink-caret\":\"styles_blink-caret__O1hsh\"};"],"sourceRoot":""}