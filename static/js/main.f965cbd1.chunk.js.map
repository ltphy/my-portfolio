{"version":3,"sources":["pages/contents/about/ProjectContentComponent/styles.module.scss","layout/styles.module.scss","pages/contents/portfolio/portfolio.interfaces.ts","context/DrawerOpenProvider/drawerOpenProvider.context.tsx","constants/default_constants.ts","layout/header/index.tsx","context/hash.context.tsx","constants/theme_mode.ts","context/ThemeProvider/theme.context.tsx","pages/contents/stories/stories.constants.ts","assets/deeplearning_contribute.png","assets/game.gif","assets/phy.jpg","assets/portfolio.gif","pages/contents/stories/index.tsx","assets/phy_3.jpg","assets/IMG_20220724_203126.jpg","assets/IMG_1658483535767_1658496775967.jpg","pages/contents/about/ProjectContentComponent/index.tsx","pages/contents/about/ProjectContentComponent/ProjectContentComponent.tsx","pages/contents/about/index.tsx","pages/contents/about/about.interfaces.ts","context/UseContactForm/useContactForm.context.tsx","components/custom_text_field/custom_text_field.tsx","components/custom_alert/custom_alert.tsx","pages/contents/contact/contact_form/contact_form.tsx","pages/contents/contact/contact_links/index.tsx","pages/contents/contact/index.tsx","pages/contents/portfolio/portfolio.constants.ts","pages/contents/portfolio/portfolio-card/PortfolioCard.tsx","pages/contents/portfolio/portfolio.tsx","constants/routes.constant.tsx","components/custom_drawer/list_item_link/list_item_link.tsx","components/custom_drawer/custom_drawer.tsx","layout/index.tsx","App.tsx","serviceWorker.js","index.js","pages/contents/stories/styles.module.scss"],"names":["module","exports","PortfolioTitle","DrawerToggleContext","React","createContext","open","toggleOpen","DrawerToggleProvider","props","Provider","value","drawerToggle","children","useDrawerToggleContext","useContext","drawerWidth","useStyle","makeStyles","theme","menuButton","marginRight","spacing","color","hide","display","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","headerTitle","fontWeight","Header","headerProps","useDrawerToggle","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","console","log","edge","Typography","variant","noWrap","defaultHashValue","hashName","HashContext","HashContextProvider","hashValue","lightTheme","navBar","fontSize","content","fontFamily","toggleButton","toggleBorder","gradient","switchColor","transformLight","transformDark","title","ThemeContext","fields","imageList","phy","withRouter","useState","currentImageIdx","setCurrentImageIdx","useTheme","timeoutList","useShowImageRef","useRef","useEffect","current","clearTimeout","setTimeout","length","typeWriter","setTypeText","forEach","timeout","typeText","text","textFields","slice","prevState","push","style","styles","container","src","my_img","title_content","layout_content","page_title","typewriter2","ProjectContentComponent","projectContent","projectSubContents","renderContent","map","project_title","projectSubContent","project_sub_title","TimelineItem","withStyles","missingOppositeContent","MuiTimelineItem","useStyles","contentWrapper","padding","titleWrapper","textAlign","textTransform","marginBottom","margin","alignItems","flexDirection","paper","timelineDot","background","timelineDotCurrent","timelineConnector","timelineContent","event","boxShadow","bottom","border","borderLeftColor","centerText","justifyContent","projectSubTitle","opacity","paperContent","projectTitle","iconSection","roleTitle","rightContent","marginTop","inputWrapper","height","overflowY","scrollWrapper","downloadWrapper","left","transform","faceCenter","borderRadius","classes","Face","Grid","item","xs","Timeline","TimelineSeparator","TimelineDot","TimelineContent","component","TimelineConnector","Paper","elevation","gutterBottom","Button","href","download","size","startIcon","CloudDownloadOutlined","useContactForm","sendEmail","validationSchema","useMemo","yup","name","required","default","email","message","useForm","resolver","yupResolver","defaultValues","cast","handleSubmit","formState","control","onSubmit","useCallback","formValues","a","root","overflow","fade","palette","primary","main","borderColor","error_message","CustomTextField","redditStyles","defaultValue","render","field","onChange","onBlur","TextField","label","multiline","fullWidth","rows","InputProps","disableUnderline","errors","Warning","CustomAlert","buttonWrapper","alignContent","sendButton","buttonProgress","green","top","right","ContactForm","loading","setLoading","timeOut","successAlert","setSuccessAlert","errorAlert","setErrorAlert","emailjs","init","send","closeAlert","type","disabled","endIcon","Send","CircularProgress","Snackbar","autoHideDuration","onClose","severity","link_wrapper","links_container","icon","ContactLinks","target","GitHub","Facebook","LinkedIn","Twitter","secondary","contactForm","PhoneAndroid","portfolioList","subTitle","image","portfolio","category","Web","url","deepLearningContribute","DeepLearning","game","All","card","imageContent","PortfolioCard","to","pathname","Card","onMouseOver","evcnt","CardActionArea","CardMedia","CardContent","portfolioTitle","filterPortfolio","portfolioContainer","flexWrap","itemWrapper","buttonFilter","centerPadding","Portfolio","setPortfolioList","selected","setSelected","WorkOutline","Object","values","porfolios","filter","onClickFilterButton","TransitionGroup","index","CSSTransition","classNames","defaultRoute","routes","Stories","iconRender","HomeOutlined","isPrivate","showHeaderNavBar","path","exact","About","Contact","ListItemLink","route","renderLink","forwardRef","itemProps","ref","ListItem","button","ListItemIcon","ListItemText","flexShrink","whiteSpace","drawerPaper","drawerHeader","mixins","toolbar","drawerOpen","drawerClose","breakpoints","up","CustomDrawer","Drawer","anchor","ChevronLeftOutlined","List","Divider","flexGrow","contentShift","MainLayout","App","RenderMainRoute","state","setState","this","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f965cbd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"project_title\":\"styles_project_title__34mpZ\",\"project_sub_title\":\"styles_project_sub_title__1wYTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__BDjbF\"};","export enum PortfolioTitle {\n    All = \"All\",\n    Mobile = \"Mobile App\",\n    Web = \"Web App\",\n    DeepLearning = \"Deep Learning\",\n}\n","import React, {useContext} from \"react\";\nimport {lightTheme, Theme} from \"../../constants/theme_mode\";\n\nexport interface DrawerToggle {\n    open: boolean;\n    toggleOpen: (open: boolean) => void;\n}\n\n// init drwer toggle context\nexport const DrawerToggleContext: React.Context<DrawerToggle> = React.createContext<DrawerToggle>({\n    open: false,\n    toggleOpen: (open) => {\n    }\n});\n\ninterface DrawerToggleProps {\n    children: any;\n    drawerToggle: DrawerToggle;\n}\n\nexport const DrawerToggleProvider = (props: DrawerToggleProps) => {\n    return (\n        <DrawerToggleContext.Provider value={props.drawerToggle}>\n            {props.children}\n        </DrawerToggleContext.Provider>\n    );\n};\n\nexport const useDrawerToggleContext = () => {\n    return useContext<DrawerToggle>(DrawerToggleContext);\n};\n\n","const typeSpeed = 150;\nconst drawerWidth = 240;\nconst serviceID = 'service_jjcha0p';\nconst templateID = 'template_eco4z1r';\nconst userID = 'user_Tyqvr5ZSCefJW9q69Y1SO';\nexport {typeSpeed, drawerWidth, serviceID, templateID, userID};","import React, {useEffect, useState} from 'react';\nimport {SwitchClassKey, SwitchProps} from '@material-ui/core/Switch';\nimport {useThemeContext} from \"../../context/ThemeProvider/theme.context\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from \"@material-ui/core/Typography\";\nimport {useDrawerToggleContext} from \"../../context/DrawerOpenProvider/drawerOpenProvider.context\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from 'clsx';\nimport {drawerWidth} from \"../../constants/default_constants\";\n\ninterface Styles extends Partial<Record<SwitchClassKey, string>> {\n    focusVisible?: string;\n}\n\ninterface Props extends SwitchProps {\n    classes: Styles;\n}\n\ninterface HeaderProps {\n    changeNavTab?: (hashNavValue: string) => void;\n    switchTheme?: (theme: boolean) => void;\n}\n\nconst useStyle = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: \"#000000\",\n\n    },\n    hide: {\n        display: 'none'\n    },\n    appBar: {\n        backgroundColor: \"#ffffff\",\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    headerTitle: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        fontWeight: 900,\n        color: \"#000000\",\n\n    }\n}));\nconst Header = (headerProps: HeaderProps) => {\n\n    // const [themeMode, setThemeMode] = useState<boolean>();\n    // const useTheme = useThemeContext();\n    const useDrawerToggle = useDrawerToggleContext();\n    const theme = useStyle();\n    // const switchThemeMode = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     console.log(event.target.checked);\n    //     setThemeMode(event.target.checked);\n    //     headerProps.switchTheme(event.target.checked);\n    // };\n    //this header is not used to move to other route but instead to move to certain href element\n    return (\n\n        <AppBar position={'fixed'} className={clsx(theme.appBar, {[theme.appBarShift]: useDrawerToggle.open})}>\n            <Toolbar>\n                <IconButton color={\"inherit\"} aria-label={\"open drawer\"}\n                            onClick={() => {\n                                console.log('onCLick', useDrawerToggle.open);\n                                console.log('function', useDrawerToggle.toggleOpen);\n                                useDrawerToggle.toggleOpen(!useDrawerToggle.open);\n                            }} edge=\"start\"\n                            className={clsx(theme.menuButton, useDrawerToggle.open && theme.hide)}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant={'h5'} noWrap className={theme.headerTitle}>\n                    Lieng The Phy\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        // <Navbar expand=\"lg\" sticky={\"top\"} className={styles.nav_wrapper} style={useTheme.navBar}>\n        //     <Container fluid>\n        //         <Col className={styles.brandWrapper}>\n        //             <Navbar.Brand className={styles.brand} style={{\"color\": useTheme.navBar.color}}>\n        //                 Phy Lieng\n        //             </Navbar.Brand>\n        //         </Col>\n        //         {/*To create a toggle button for nav bar*/}\n        //         <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className={styles.toggle}>\n        //             Menu <FontAwesomeIcon icon={faBars}/>\n        //         </Navbar.Toggle>\n        //         <Navbar.Collapse id={\"responsive-navbar-nav\"} className={styles.nav_container}>\n        //             <Nav>\n        //                 {\n        //                     homeRouters.map((route: IHomeRouter, index: number) => {\n        //                         return (\n        //                             route.showHeaderNavBar &&\n        //                             (<Nav.Link className={styles.route} style={{\"color\": useTheme.navBar.color}}\n        //                                        key={route.title} onClick={() => {\n        //                                 headerProps.changeNavTab(route.title);\n        //                             }}>\n        //                                 {route.title}\n        //                             </Nav.Link>)\n        //                         );\n        //                     })\n        //\n        //                 }\n        //\n        //             </Nav>\n        //         </Navbar.Collapse>\n        //\n        //     </Container>\n        // </Navbar>\n    );\n};\nexport default Header;\n","import React, {useContext, useRef} from 'react';\n\nexport interface HashValue {\n    hashName: string;\n}\n\nconst defaultHashValue: HashValue = {hashName: \"\"};\nconst HashContext: React.Context<HashValue> = React.createContext<HashValue>(defaultHashValue);\n\ninterface hashContextProps\n{\n    children: any;\n    hashValue: HashValue;\n}\n\nexport const HashContextProvider = (props: hashContextProps) => {\n    return (\n        <HashContext.Provider value={props.hashValue}>\n            {props.children}\n        </HashContext.Provider>\n    );\n};\n\nexport const useHashRoute = () => {\n    return useContext<HashValue>(HashContext);\n};\n","export interface Theme {\n    navBar: {\n        backgroundColor: string;\n        color: string;\n        transition: string;\n    }\n    content: {\n        backgroundColor: string;\n        color: string;\n        transition: string;\n        fontSize: string;\n        fontFamily: string;\n    }\n    toggleButton: {\n        gradient: string;\n        toggleBorder: string;\n        switchColor: string;\n        transformDark: string;\n        transformLight: string;\n    }\n\n}\n\nexport const lightTheme = {\n    navBar: {\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n        transition: \"all 0.25s linear\",\n        fontSize: \"30rem\",\n    },\n    content: {\n        fontSize: \"16px\",\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n        // transition: \"all 0.25s linear\",\n        fontFamily: \"Roboto, sans-serif\",\n    },\n    toggleButton: {\n        toggleBorder: \"black\",\n        // gradient: 'linear-gradient(#39598A, #79D7ED)',\n        gradient: \"#fff\",\n        switchColor: \"#000\",\n        transformLight: \"translateY(0)\",\n        transformDark: \"translateY(-100px)\"\n    },\n    title: {}\n};\n\nexport const darkTheme = {\n    content: {\n        backgroundColor: \"#18191a\",\n        color: \"#b0b3b8\",\n        transition: \"all 0.25s linear\",\n        fontSize: \"16px\",\n        fontFamily: \"Roboto, sans-serif\",\n    },\n    navBar: {\n        backgroundColor: \"#242526\",\n        color: \"#b0b3b8\",\n        transition: \"all 0.25s linear\",\n    },\n    toggleButton: {\n        toggleBorder: \"#fff\",\n        // gradient: \"linear-gradient(#091236, #1E215D)\",\n        gradient: \"#000\",\n        switchColor: \"#fff\",\n        transformLight: \"translateY(100px)\",\n        transformDark: \"translateY(0)\",\n    }\n\n};\n\n\n","import React, {Context, useContext} from 'react';\nimport {lightTheme, Theme} from \"../../constants/theme_mode\";\n\nexport const ThemeContext: React.Context<Theme> = React.createContext<Theme>(lightTheme);\n\ninterface ThemeContextProps {\n    children: any;\n    theme: Theme;\n}\n\nexport const ThemeProvider = (props: ThemeContextProps) => {\n    return (\n        <ThemeContext.Provider value={props.theme}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n\n};\nexport const useThemeContext = () => {\n    return useContext<Theme>(ThemeContext);\n};\n\n\n\n\n","export const fields = [\"a software engineer\", \"a writer\", \"a knowledge seeker\", \"a fitness freak\", \"a manga lover\"];","export default __webpack_public_path__ + \"static/media/deeplearning_contribute.73e4cc8b.png\";","export default __webpack_public_path__ + \"static/media/game.2416bb55.gif\";","export default __webpack_public_path__ + \"static/media/phy.4a466dcc.jpg\";","export default __webpack_public_path__ + \"static/media/portfolio.c997a45a.gif\";","import React, {useEffect, useRef, useState} from \"react\";\nimport {useThemeContext} from \"../../../context/ThemeProvider/theme.context\";\nimport {fields} from \"./stories.constants\";\nimport {typeSpeed} from \"../../../constants/default_constants\";\nimport {withRouter} from \"react-router-dom\";\nimport styles from './styles.module.scss';\nimport {phy1, phy2, phy3, phy} from '../../../assets';\n\nconst images = [\n    {\n        original: 'https://picsum.photos/id/1018/1000/600/',\n        thumbnail: 'https://picsum.photos/id/1018/250/150/',\n    },\n    {\n        original: 'https://picsum.photos/id/1015/1000/600/',\n        thumbnail: 'https://picsum.photos/id/1015/250/150/',\n    },\n    {\n        original: 'https://picsum.photos/id/1019/1000/600/',\n        thumbnail: 'https://picsum.photos/id/1019/250/150/',\n    },\n];\n\nconst imageList = [phy1, phy, phy2, phy3];\n\nconst Stories = () => {\n    //will render\n    const [currentImageIdx, setCurrentImageIdx] = useState<number>(0);\n\n    const useTheme = useThemeContext();\n\n    let timeoutList: NodeJS.Timeout[] = [];\n    const useShowImageRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n    useEffect(() => {\n        if (useShowImageRef.current) {\n            clearTimeout(useShowImageRef.current);\n            useShowImageRef.current = null;\n        }\n        useShowImageRef.current = setTimeout(() => {\n            // after rerender\n            const imageIndex = (currentImageIdx + 1) % imageList.length;\n            setCurrentImageIdx(imageIndex);\n        }, 5000);\n        return () => {\n            if (useShowImageRef.current) {\n                clearTimeout(useShowImageRef.current);\n            }\n\n        };\n\n    }, [currentImageIdx]);\n    useEffect(() => {\n        typeWriter(fields[0], fields);\n\n        return () => {\n            setTypeText('');\n            timeoutList.forEach((timeout) => clearTimeout(timeout));\n            if (useShowImageRef.current) {\n                clearTimeout(useShowImageRef.current);\n                useShowImageRef.current = null;\n            }\n        };\n    }, []);\n\n\n    const [typeText, setTypeText] = useState<string>('');\n\n    const typeWriter = (text: string, textFields: string[]) => {\n        if (text.length === 0) {\n            // remove the previous value\n            setTypeText('');\n            textFields = textFields.slice(1);\n            if (textFields.length === 0)\n                textFields = fields;\n            typeWriter(textFields[0], textFields);\n\n        } else {\n            setTypeText((prevState => {\n                return prevState + text[0];\n            }));\n            const timeout = setTimeout(() => typeWriter(text.slice(1), textFields), typeSpeed);\n            timeoutList.push(timeout);\n        }\n    };\n\n    return (<div style={useTheme.content}>\n        <div className={styles.container}>\n            <img\n                src={imageList[currentImageIdx]}\n                className={styles.my_img}\n            />\n\n            <div className={styles.title_content}>\n                <div className={styles.layout_content}>\n                    <h4>\n                        Hi, I am\n                    </h4>\n                    <h2 className={styles.page_title}>\n                        Lieng The Phy\n                    </h2>\n                    <h4>\n                        I am {' '}\n                        <strong className={styles.typewriter2}>\n                            {typeText}\n                        </strong>\n                    </h4>\n                </div>\n            </div>\n        </div>\n    </div>);\n};\nexport default withRouter(Stories);\n","export default __webpack_public_path__ + \"static/media/phy_3.eb07d8b5.jpg\";","export default __webpack_public_path__ + \"static/media/IMG_20220724_203126.6be16951.jpg\";","export default __webpack_public_path__ + \"static/media/IMG_1658483535767_1658496775967.a661ca65.jpg\";","import ProjectContentComponent from \"./ProjectContentComponent\";\n\nexport default ProjectContentComponent;\n","import React from \"react\";\nimport styles from './styles.module.scss';\n\nexport interface ProjectContent {\n    title: string;\n    content: string | string[];\n}\n\nexport interface ProjectContentComponentProps {\n    projectContent: ProjectContent;\n    projectSubContents?: ProjectContent[];\n}\n\nconst ProjectContentComponent = (props: ProjectContentComponentProps) => {\n    const {projectContent, projectSubContents} = props;\n\n    const renderContent = (content: string | string[]) => {\n        return typeof content === \"string\" ? <p>{content}</p> : (\n            <div>\n                {content.map((content) => {\n                    return (<div key={content}>- {content}</div>);\n                })}\n            </div>\n        );\n    };\n\n    return <div>\n        <div className={styles.project_title}>{projectContent.title}</div>\n        {renderContent(projectContent.content)}\n        {\n            projectSubContents && projectSubContents.map((projectSubContent) => {\n                return <div key={projectSubContent.title}>\n                    <div className={styles.project_sub_title}>{projectSubContent.title}</div>\n                    {renderContent(projectSubContent.content)}\n                </div>\n            })\n        }\n    </div>\n};\n\nexport default ProjectContentComponent;","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {CloudDownloadOutlined, Face} from \"@material-ui/icons\";\nimport {Button, Grid, Typography, withStyles} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport LaptopMacIcon from \"@material-ui/icons/LaptopMac\";\n\nimport {\n    Timeline,\n    TimelineConnector,\n    TimelineContent,\n    TimelineDot,\n    TimelineItem as MuiTimelineItem,\n    TimelineSeparator\n} from \"@material-ui/lab\";\nimport {withRouter} from \"react-router\";\nimport {downloadURL} from \"./about.interfaces\";\nimport ProjectContentComponent from \"./ProjectContentComponent\";\n\nconst TimelineItem = withStyles({\n    missingOppositeContent: {\n        \"&:before\": {\n            display: \"none\"\n        }\n    }\n})(MuiTimelineItem);\n\nconst useStyles = makeStyles((theme) => ({\n    contentWrapper: {\n        padding: '80px',\n    },\n    titleWrapper: {\n        textAlign: 'center',\n        '& > *': {\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n\n            '&:first-child': {\n                fontSize: '3rem',\n            },\n            '&:not(:first-child)': {\n                marginBottom: '12px',\n                padding: '5px 8px',\n                width: '20%',\n                margin: 'auto',\n\n            }\n        }\n    },\n    title: {\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        marginBottom: '12px',\n    },\n\n    content: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n\n    paper: {\n        padding: theme.spacing(1),\n    },\n    timelineDot: {\n        color: 'white',\n        background: 'white'\n    },\n    timelineDotCurrent: {\n        background: '#0057D9'\n    },\n    timelineConnector: {\n        color: 'white',\n        background: 'white'\n    },\n    timelineContent: {\n        marginLeft: '10px',\n    },\n    event: {\n        position: 'relative',\n\n        '& h3': {\n            color: '#fff',\n            padding: '3px 8px',\n            marginBottom: '1.5em',\n            background: '#0057D9',\n            width: 'max-content',\n            fontSize: '14px',\n            marginLeft: '30px',\n            boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n\n            '&::before': {\n                content: '\"\"',\n                bottom: '0',\n                position: 'absolute',\n                border: '11px solid #0057D9!important',\n                borderLeftColor: 'transparent !important',\n                display: 'block',\n                marginLeft: '-35px',\n            }\n        },\n    },\n    centerText: {\n        display: \"flex\",\n        justifyContent: 'center'\n    },\n    projectSubTitle: {\n        fontWeight: 700,\n        color: '#0057D9',\n        opacity: 0.8,\n        fontSize: '14px',\n        marginBottom: '5px'\n    },\n    paperContent: {\n        padding: '8px 12px',\n        margin: '8px 0',\n        fontSize: '14px',\n        '& div': {\n            '&$projectTitle': {\n                fontSize: '15px',\n                fontWeight: 700,\n                color: '#0057D9',\n            }\n        }\n    },\n    projectTitle: {},\n    iconSection: {\n        backgroundColor: '#0057D9'\n    },\n    roleTitle: {\n        textTransform: 'uppercase',\n        fontWeight: 'bold'\n    },\n    rightContent: {\n        marginTop: '1rem'\n    },\n    inputWrapper: {\n        width: '100px',\n        '&$scrollWrapper': {\n            height: '200px',\n            overflowY: 'scroll'\n        }\n    },\n    scrollWrapper: {},\n    downloadWrapper: {\n        position: 'fixed',\n        bottom: 10,\n        left: '50%',\n        transform: 'translate(-50%, 0)'\n    },\n    faceCenter: {\n        borderRadius: '15px',\n        width: '100%',\n        height: '100px',\n        border: '1rem #ffff00 thick'\n    }\n}));\n\n\nconst About = () => {\n    const classes = useStyles();\n\n\n    const drawTimeLines = () => {\n        return (<>\n            <Timeline>\n                <TimelineItem>\n                    <TimelineSeparator>\n                        <TimelineDot className={classes.iconSection}>\n                            <LaptopMacIcon fontSize={'large'}/>\n\n                        </TimelineDot>\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        <Typography className={classes.title} variant={'h5'} component={'h1'}>\n                            CODE HISTORY\n                        </Typography>\n                    </TimelineContent>\n\n                </TimelineItem>\n                <div className={classes.timelineContent}>\n                    <TimelineItem>\n                        <TimelineSeparator>\n\n                            <TimelineDot className={classes.timelineDotCurrent}/>\n                            <TimelineConnector className={classes.timelineConnector}/>\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <div className={classes.event}>\n                                <h3>Nov 2020 - current</h3>\n                            </div>\n\n                            <Typography className={classes.roleTitle}>software engineer</Typography>\n                            <div> ZMP VN Inc.</div>\n\n                            <Paper elevation={4} className={classes.paperContent}>\n\n                                <ProjectContentComponent\n                                    projectContent={{\n                                        title: 'Rakuro - 80%',\n                                        content: '- Work as a full stack developer to create a booking robot application'\n                                    }}\n                                    projectSubContents={\n                                        [\n                                            {\n                                                title: 'Frontend: ReactJS',\n                                                content: ['Easy-peasy store state management', 'Antd form design with search, and filtering features']\n                                            },\n                                            {\n                                                title: 'Mobile: React Native',\n                                                content: ['React navigation', 'Implement UI for both Android and iOS', 'Handle state with Observable store']\n                                            },\n                                            {\n                                                title: 'Backend: Restful API, PostgreSQL',\n                                                content: ['Server using Nodejs with Express', 'Implement UI for both Android and iOS', 'Handle state with Observable store']\n                                            },\n                                        ]\n                                    }\n                                />\n                                <ProjectContentComponent projectContent={{\n                                    title: 'ForkApp - 100%',\n                                    content: ['A flutter app communicates with Redis Server to command fork lift robots.']\n                                }}\n                                />\n                                <ProjectContentComponent\n                                    projectContent={{\n                                        title: 'Deep learning project - 70%',\n                                        content: ['3D Object Detection using point clouds.', 'Modify existing repository for the project\\'s use case and provide a solution\\n' +\n                                        '                                    for real time processing.']\n                                    }}\n                                />\n                                <ProjectContentComponent\n                                    projectContent={{\n                                        title: 'Other side projects',\n                                        content: ''\n                                    }}\n                                    projectSubContents={\n                                        [{\n                                            title: 'ZMapEditor - Reactjs - 5%',\n                                            content: ' - Using Geojson and Nebula.gl to implement some custom features to draw traffic map.'\n                                        },\n                                            {\n                                                title: 'Taisei project - Reactjs - 1%',\n                                                content: ' - Create a chat room for different company roles to communicate with each other to register robot.'\n                                            }\n                                        ]\n                                    }\n                                />\n\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n\n                    <TimelineItem>\n                        <TimelineSeparator>\n\n                            <TimelineDot className={classes.timelineDot}/>\n                            <TimelineConnector className={classes.timelineConnector}/>\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <div className={classes.event}>\n                                <h3>June 2018 - April 2019</h3>\n                            </div>\n                            <Typography className={classes.roleTitle}> R&D DEVELOPER </Typography>\n                            <div> BeeSight Soft Inc.</div>\n\n                            <Paper elevation={4} className={classes.paperContent}>\n                                <ProjectContentComponent\n                                    projectContent={{\n                                        title: 'Projects about face detections and recognitions - 95%',\n                                        content: ['3D Object Detection using point clouds.', 'Modify existing repository for the project\\'s use case and provide a solution for real time processing.', 'Create a machine learning game by merging jsTensorflow and Unity Game 2D using WebSocket.', 'Work with Unity and Android to create a Snapchat-lookalike project.']\n                                    }}\n                                />\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                </div>\n            </Timeline></>);\n    };\n    const renderEducationTimeline = () => {\n        return (<Timeline>\n            <TimelineItem>\n                <TimelineSeparator>\n                    <TimelineDot className={classes.iconSection}>\n                        <LaptopMacIcon fontSize={'large'}/>\n                    </TimelineDot>\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Typography className={classes.title} variant={'h5'} component={'h1'}>\n                        Education history\n                    </Typography>\n                </TimelineContent>\n\n            </TimelineItem>\n            <div className={classes.timelineContent}>\n                <TimelineItem>\n                    <TimelineSeparator>\n                        <TimelineDot className={classes.timelineDot}/>\n                        <TimelineConnector className={classes.timelineConnector}/>\n                    </TimelineSeparator>\n                    <TimelineContent>\n                        <div className={classes.event}>\n                            <h3>June 2018 - April 2019</h3>\n                        </div>\n                        <Typography className={classes.roleTitle}> Computer science student</Typography>\n                        <div>HCMUS-University of science</div>\n                        <Paper className={classes.paperContent}>\n                            <ProjectContentComponent\n                                projectContent={{\n                                    title: 'Bachelor of Computer Science, 2019',\n                                    content: ['Graduated with GPA 8.89', ' Student of Advanced Program in Computer Science', 'IELTS band 6.5']\n                                }}\n                            />\n                        </Paper>\n\n                    </TimelineContent>\n                </TimelineItem>\n            </div>\n        </Timeline>);\n    };\n    const skillContent = () => {\n        return (\n            <div className={classes.rightContent}>\n                <Typography variant={'h5'}\n                            component={'h1'}\n                            gutterBottom\n                            className={classes.title}\n                            style={{marginTop: '5.3em'}}\n                >Areas of Expertise</Typography>\n                <Paper className={classes.paperContent}>\n                    <ProjectContentComponent\n                        projectContent={{\n                            title: '',\n                            content: ['Knowledge of Dart, Javascript, Typescript, CSS, HTML', 'knowledge of React.js', 'Knowledge of Flutter', 'Knowledge of React Native', 'C++, and Python experience', 'NodeJs - Express and Restful API']\n                        }}\n                    />\n                </Paper>\n                <Typography variant='h5'\n                            component={'h1'}\n                            gutterBottom\n                            className={classes.title}\n                            style={{marginTop: '2.5em'}}\n                >WORK\n                    SKILLS</Typography>\n                <Paper className={classes.paperContent}>\n                    <ProjectContentComponent\n                        projectContent={{\n                            title: '',\n                            content: ['Have knowledge of Data Structures and Algorithms.', 'Detail oriented, team player', 'Problem solver by presenting and understanding the flow of code.', 'Strong self-learning ability but always eager to ask.']\n                        }}\n                    />\n                </Paper>\n\n            </div>);\n    };\n\n    return (<div className={classes.contentWrapper}>\n        <div className={classes.titleWrapper}>\n            <div>\n                <Face fontSize={'large'}/>\n            </div>\n            <h1>\n                RESUME\n            </h1>\n\n        </div>\n        <div className={classes.content}>\n            <Grid container>\n                <Grid item xs={6}>\n                    {drawTimeLines()}\n                    {renderEducationTimeline()}\n                </Grid>\n                <Grid item xs={6}>\n                    {skillContent()}\n                </Grid>\n\n            </Grid>\n        </div>\n        <div className={classes.downloadWrapper}>\n            <Button href={downloadURL} download='cv' variant={'contained'} color=\"primary\" size={'large'}\n                    startIcon={<CloudDownloadOutlined/>}\n            >\n                Download CV\n            </Button>\n        </div>\n    </div>);\n};\nexport default withRouter(About);\n","export const downloadURL = \"https://drive.google.com/uc?export=download&id=1yN512PI398ibuKf2xx_b3wgFKcGUEiIp\";\n","import {ReactElement, useCallback, useMemo} from \"react\";\nimport * as yup from \"yup\";\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport emailjs from 'emailjs-com';\nimport {serviceID, templateID, userID} from \"../../constants/default_constants\";\n\ninterface ContactInterface {\n    name: string;\n    email: string;\n    message: string;\n}\ninterface useContactFormProps {\n    sendEmail: (formValues: any) => void;\n}\nconst useContactForm = ({sendEmail}: useContactFormProps) => {\n    const validationSchema = useMemo(() => {\n        return yup.object({\n            name: yup.string().required('Name is required').default(''),\n            email: yup.string().email().required('Email is required').default(''),\n            message: yup.string().required('Message is required').default(''),\n        });\n    }, []);\n    const {handleSubmit, formState, control} = useForm<ContactInterface>({\n        resolver: yupResolver(validationSchema), defaultValues: validationSchema.cast({})\n    });\n\n    const onSubmit = useCallback(async (formValues) => {\n        await sendEmail(formValues);\n    }, []);\n\n    return {control, onSubmit: handleSubmit(onSubmit), formState};\n\n\n};\n\nexport default useContactForm;","import React from 'react';\nimport {fade, makeStyles, TextField} from \"@material-ui/core\";\nimport {Control, Controller} from \"react-hook-form\";\nimport {ErrorMessage} from \"@hookform/error-message\";\nimport {Warning} from \"@material-ui/icons\";\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        border: '1px solid #e2e2e1',\n        overflow: \"hidden\",\n        borderRadius: 4,\n        backgroundColor: '#fcfcfc',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        marginBottom: theme.spacing(1),\n        '&:hover': {\n            backgroundColor: '#fff'\n        },\n        '&$focused': {\n            backgroundColor: '#fff',\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n            borderColor: theme.palette.primary.main\n        }\n\n    },\n    error_message: {\n        color: '#F20505',\n    }\n\n}));\n\ninterface CustomTextFieldProps {\n    name: string;\n    control: Control<Record<string, any>>;\n    label: string;\n    defaultValue?: string;\n    errors?: any;\n    multiline?: boolean;\n    rows?: number;\n}\n\nconst CustomTextField = (props: CustomTextFieldProps) => {\n\n    const redditStyles = useStyle();\n    return (<div>\n        <Controller name={props.name}\n                    control={props.control}\n                    defaultValue={props.defaultValue || ''}\n                    render={({field: {onChange, onBlur, value}}) => {\n                        return (<TextField onChange={onChange}\n                                           onBlur={onBlur}\n                                           value={value}\n                                           label={props.label}\n                                           multiline={props.multiline}\n                                           fullWidth\n                                           variant={'filled'}\n                                           rows={props.rows}\n                                           InputProps={{classes: {root: redditStyles.root}, disableUnderline: true}}\n                        />);\n                    }}/>\n        <div className={redditStyles.error_message}>\n            {props.errors[props.name] != null ?\n                <>\n                    <Warning fontSize={'small'}/>\n                    <ErrorMessage errors={props.errors} name={props.name}/>\n                </>\n                : <></>}\n        </div>\n\n    </div>);\n};\nexport default CustomTextField;","import React, {ReactElement} from \"react\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {AlertProps} from \"@material-ui/lab/Alert/Alert\";\n\nexport const CustomAlert = (props: AlertProps): ReactElement => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};","import React, {useEffect, useRef, useState} from 'react';\nimport useContactForm from '../../../../context/UseContactForm/useContactForm.context';\nimport {Button, CircularProgress, makeStyles, Snackbar} from \"@material-ui/core\";\nimport CustomTextField from \"../../../../components/custom_text_field/custom_text_field\";\nimport {Send} from '@material-ui/icons';\nimport Paper from \"@material-ui/core/Paper\";\nimport {green} from '@material-ui/core/colors';\nimport {serviceID, templateID, userID} from '../../../../constants/default_constants';\nimport emailjs from 'emailjs-com';\nimport {CustomAlert} from \"../../../../components/custom_alert/custom_alert\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    buttonWrapper: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'row',\n        alignContent: 'center',\n        justifyContent: 'center',\n        position: 'relative',\n    },\n    sendButton: {\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        color: \"white\"\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        right: '50%',\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nconst ContactForm = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const timeOut = useRef<NodeJS.Timeout>();\n    const [successAlert, setSuccessAlert] = useState<boolean>(false);\n    const [errorAlert, setErrorAlert] = useState<boolean>(false);\n    useEffect(() => {\n\n        return () => {\n            if (timeOut.current) {\n                clearTimeout(timeOut.current);\n            }\n\n        };\n    }, []);\n    const sendEmail = async (formValues: any) => {\n        console.log(formValues);\n        setLoading(true);\n        emailjs.init(userID);\n        try {\n            const value = await emailjs.send(serviceID, templateID, formValues);\n            setSuccessAlert(true);\n\n        } catch (error) {\n            setErrorAlert(true);\n            console.log(error.text);\n        }\n        setLoading(false);\n    };\n\n    const {control, onSubmit, formState} = useContactForm({sendEmail: sendEmail});\n    const classes = useStyles();\n    const closeAlert = ()=>{\n        if(successAlert) {\n            setSuccessAlert(false);\n        }\n        if(errorAlert) {\n            setErrorAlert(false);\n        }\n    };\n\n    return (<div>\n        <form onSubmit={onSubmit} name={'send'}>\n            <Paper elevation={4} className={classes.paper}>\n\n\n                <CustomTextField control={control} name={'name'} label={'Name'} errors={formState.errors}/>\n\n                <CustomTextField control={control} name={'email'} label={'Email'} errors={formState.errors}/>\n\n                <CustomTextField control={control} name={'message'} label={'Message'} multiline\n                                 errors={formState.errors} rows={5}/>\n                <div className={classes.buttonWrapper}>\n                    <Button\n                        className={classes.sendButton}\n                        type=\"submit\"\n                        size={'large'}\n                        name='send'\n                        variant=\"contained\"\n                        disabled={loading}\n                        endIcon={<Send/>}\n                    >\n                        Send\n\n                    </Button>\n                    {loading && <CircularProgress size={20} className={classes.buttonProgress}/>}\n                </div>\n            </Paper>\n        </form>\n        <Snackbar open={successAlert} autoHideDuration={6000} onClose={closeAlert}>\n\n        <CustomAlert severity='success' onClose={closeAlert}>Email sent successfully!</CustomAlert>\n           </Snackbar>\n        <Snackbar  open={errorAlert} autoHideDuration={6000} onClose={closeAlert}>\n            <CustomAlert  severity='error' onClose={closeAlert}>Failed to send email!</CustomAlert>\n        </Snackbar>\n\n    </div>);\n}\nexport default ContactForm;","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Theme} from '@material-ui/core/styles/createMuiTheme';\nimport Paper from \"@material-ui/core/Paper\";\nimport {IconButton} from \"@material-ui/core\";\nimport {BrightnessMediumOutlined, Facebook, GitHub, LinkedIn, Twitter} from '@material-ui/icons';\nimport { ReactComponent as YourSvg } from './your-svg.svg';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    link_wrapper: {\n        display: 'contents',\n\n    },\n    links_container: {\n        height: '20vh',\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    icon: {\n        marginRight: theme.spacing(2)\n    }\n}));\n\nconst ContactLinks = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.link_wrapper}>\n        <Paper className={classes.links_container} elevation={4}>\n            <a href={'https://github.com/ltphy'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <GitHub/>\n                </IconButton>\n            </a>\n            <a href={'https://www.facebook.com/the.phy.9'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <Facebook/>\n                </IconButton>\n            </a>\n            <a href={'https://www.linkedin.com/in/phy-lieng-7872a910b/'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <LinkedIn/>\n                </IconButton>\n\n            </a>\n            <a href={'https://www.linkedin.com/in/phy-lieng-7872a910b/'} target={'_blank'}>\n                <IconButton size={'medium'} className={classes.icon}>\n                    <Twitter/>\n                </IconButton>\n\n            </a>\n            <a href={'https://medium.com/@phylieng97'} target={'_blank'}>\n                <IconButton>\n                    <i className=\"fab fa-medium\"/>\n\n                </IconButton>\n            </a>\n\n        </Paper></div>);\n};\nexport default ContactLinks;","import React from \"react\";\nimport {useThemeContext} from \"../../../context/ThemeProvider/theme.context\";\nimport Grid from '@material-ui/core/Grid';\nimport {Paper} from \"@material-ui/core\";\nimport ContactForm from \"./contact_form/contact_form\";\nimport ContactLinks from \"./contact_links\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {withRouter} from \"react-router\";\nimport {PhoneAndroid} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        '& b': {\n            color: theme.palette.text.primary,\n        }\n    },\n    contactForm: {\n        marginTop: '2rem',\n    },\n    contentWrapper: {\n        padding: '80px',\n    },\n    title: {\n        fontWeight: 'bold'\n    },\n    titleWrapper: {\n        textAlign: 'center',\n        '& > *': {\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n\n            '&:first-child': {\n                fontSize: '3rem',\n            },\n            '&:not(:first-child)': {\n                marginBottom: '12px',\n                padding: '5px 8px',\n            }\n        }\n    },\n}));\n\nconst Contact = () => {\n    const classes = useStyles();\n\n\n    return (<div className={classes.contentWrapper}>\n        <div className={classes.titleWrapper}>\n            <div>\n                <PhoneAndroid fontSize=\"large\"/>\n            </div>\n            <h1 className={classes.title}> Get in Touch</h1>\n        </div>\n\n        <h3 className={classes.title}>Contact me</h3>\n        <Grid container spacing={4}>\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <b>\n                        Email\n                    </b>\n\n                    <div>\n                        phylieng97@gmail.com\n                    </div>\n                </Paper>\n\n            </Grid>\n\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <b>\n                        Phone\n                    </b>\n\n                    <div>\n                        Not available\n                    </div>\n                </Paper>\n            </Grid>\n            <Grid item xs={4}>\n                <Paper className={classes.paper}>\n                    <b> Freelance\n                    </b>\n                    <div>\n                        Not available\n                    </div>\n                </Paper>\n            </Grid>\n        </Grid>\n        <div className={classes.contactForm}>\n            <h3 className={classes.title}>Send me message</h3>\n            <ContactForm/>\n        </div>\n\n\n        <ContactLinks/>\n        <div>\n\n        </div>\n    </div>);\n};\nexport default withRouter(Contact);\n","import {PortfolioContent} from \"./portfolio-card/PortfolioCard.interfaces\";\nimport {PortfolioTitle} from \"./portfolio.interfaces\";\nimport { portfolio, deepLearningContribute, game } from \"../../../assets\";\n\nexport const portfolioList: PortfolioContent[] = [\n    {\n        title: 'My Portfolio',\n        subTitle: 'Portfolio website to track my working progress.',\n        image: portfolio,\n        category: PortfolioTitle.Web,\n        url: 'https://ltphy.github.io/my-portfolio'\n    },\n    {\n        title: 'OpenPCDet',\n        subTitle: 'Contribute to an open-source research project.',\n        image: deepLearningContribute,\n        category: PortfolioTitle.DeepLearning,\n        url: 'https://github.com/open-mmlab/OpenPCDet'\n    },\n    {\n        title: 'Garbage Collector',\n        subTitle: 'A AI Game using Teachable Machine and Unity.',\n        image: game,\n        category: PortfolioTitle.All,\n        url: 'https://medium.com/@phylieng97/create-machine-learning-game-by-joining-jstensorflow-and-unity-together-using-websocket-ca00982bca46'\n    },\n];","import {makeStyles, Card, CardActionArea, CardMedia, CardContent, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {PortfolioContent} from \"./PortfolioCard.interfaces\";\nimport {Link} from 'react-router-dom';\n\ninterface PortfolioCardProps {\n    portfolio: PortfolioContent;\n}\n\nconst useStyles = makeStyles({\n    card: {\n        width: '400px',\n    },\n    imageContent: {\n        height: '300px',\n    },\n\n});\nexport const PortfolioCard = ({portfolio}: PortfolioCardProps) => {\n    const {title, subTitle, image, category, url} = portfolio;\n    const classes = useStyles();\n    const onMouseOverPortfolio = (evcnt: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n\n    };\n\n\n    return (\n        <Link to={{pathname: url}} target='_blank'>\n            <Card className={classes.card} onMouseOver={onMouseOverPortfolio} elevation={3}>\n                <CardActionArea>\n\n                    <CardMedia\n                        className={classes.imageContent}\n                        title={title}\n                        image={image}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                            {subTitle}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Link>\n\n    );\n};","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React, {useState} from 'react';\nimport {WorkOutline} from \"@material-ui/icons\";\nimport {Button} from \"@material-ui/core\";\nimport {PortfolioTitle} from \"./portfolio.interfaces\";\nimport {portfolioList} from \"./portfolio.constants\";\nimport {PortfolioCard} from \"./portfolio-card/PortfolioCard\";\nimport {PortfolioContent} from \"./portfolio-card/PortfolioCard.interfaces\";\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        '& b': {\n            color: theme.palette.text.primary,\n        }\n    },\n    contactForm: {\n        marginTop: '2rem',\n    },\n    contentWrapper: {\n        padding: '80px',\n    },\n    title: {\n        textAlign: 'center',\n        '& > *': {\n            fontWeight: 'bold',\n            textTransform: 'uppercase',\n            '&:first-child': {\n                fontSize: '3rem',\n            },\n            '&$portfolioTitle': {}\n        }\n    },\n    portfolioTitle: {\n        marginBottom: '12px',\n        padding: '5px 8px',\n    },\n    filterPortfolio: {\n        margin: '20px 10px',\n        display: \"flex\",\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: 'center'\n    },\n    portfolioContainer: {\n        width: '80%',\n        margin: '8em auto',\n        display: \"flex\",\n        flexDirection: 'row',\n        alignItems: \"center\",\n        justifyContent: 'flex-start',\n        flexWrap: 'wrap',\n        '&.empty': {\n            height: '100vh',\n            alignItems: \"flex-start\",\n        }\n    },\n    itemWrapper: {\n        padding: '1%'\n    },\n    buttonFilter: {\n        '&:focus': {\n            borderColor: 'transparent'\n        }\n    },\n    centerPadding: {\n        backgroundColor: 'red',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%,-50%)'\n    }\n\n}));\n\n\nconst Portfolio = () => {\n    const classes = useStyles();\n    const [filterPortfolio, setPortfolioList] = useState<PortfolioContent[]>(portfolioList);\n    const [selected, setSelected] = useState<string>(PortfolioTitle.All);\n\n    const onClickFilterButton = (value: string) => {\n        setSelected(value);\n        if (value === PortfolioTitle.All) {\n            setPortfolioList(portfolioList);\n            return;\n        }\n        const porfolios = portfolioList.filter((portfolio) => portfolio.category === value);\n\n        setPortfolioList(porfolios);\n    };\n\n    const renderPortfolioCards = () => {\n        return filterPortfolio.map((portfolio, index) => {\n            return (\n                <CSSTransition\n                    key={portfolio.title}\n                    classNames={'portfolio'}\n                    timeout={300}\n                >\n                    <div className={classes.itemWrapper}>\n                        <PortfolioCard portfolio={portfolio}/>\n                    </div>\n                </CSSTransition>\n            );\n        });\n    };\n\n    return (<div className={classes.contentWrapper}>\n        <div className={classes.title}>\n            <div>\n                <WorkOutline fontSize=\"large\"/>\n            </div>\n            <h1 className={classes.portfolioTitle}>Portfolio</h1>\n        </div>\n        <div>\n            <div className={classes.filterPortfolio}>\n                {Object.values(PortfolioTitle).map((value) => {\n                    return <Button variant={selected === value ? \"contained\" : \"text\"}\n                                   key={value}\n                                   color='primary'\n                                   className={classes.buttonFilter}\n                                   onClick={() => onClickFilterButton(value)}>{value}</Button>\n                })}\n            </div>\n            <TransitionGroup className={`${classes.portfolioContainer} ${filterPortfolio.length === 0 ? 'empty' : ''}`}>\n                {renderPortfolioCards()}\n            </TransitionGroup>\n\n        </div>\n    </div>);\n};\nexport default Portfolio;","import Stories from \"../pages/contents/stories\";\nimport About from \"../pages/contents/about\";\nimport {Face, HomeOutlined, PhoneAndroid, WorkOutline} from '@material-ui/icons/';\nimport React from \"react\";\nimport Contact from \"../pages/contents/contact\";\nimport Portfolio from \"../pages/contents/portfolio/portfolio\";\n\nexport interface IRouter {\n    component: any;\n    iconRender: any,\n    isPrivate: boolean,\n    title: string,\n    showHeaderNavBar: boolean,\n    path: string,\n    exact: boolean,\n}\n\nconst defaultRoute = '/my-portfolio'\nexport const routes: IRouter[] = [\n    {\n        component: Stories,\n        iconRender: () => {\n            return (<HomeOutlined/>);\n        },\n        isPrivate: false,\n        title: \"HOME\",\n        showHeaderNavBar: true,\n        path: `${defaultRoute}/`,\n        exact: true\n    },\n    {\n        component: About,\n        iconRender: () => {\n            return (<Face/>);\n        },\n        isPrivate: false,\n        title: \"ABOUT\",\n        showHeaderNavBar: true,\n        path: `${defaultRoute}/about`,\n        exact: true\n\n    },\n    {\n        component: Portfolio,\n        iconRender: () => {\n            return (<WorkOutline/>);\n        },\n        isPrivate: false,\n        title: \"PORTFOLIO\",\n        showHeaderNavBar: true,\n        path: `${defaultRoute}/portfolio`,\n        exact: true\n    },\n    {\n        component: Contact,\n        iconRender: () => {\n            return (<PhoneAndroid/>);\n        },\n        isPrivate: false,\n        title: \"CONTACT\",\n        showHeaderNavBar: true,\n        path: `${defaultRoute}/contact`,\n        exact: true\n    },\n];\n","import React, {forwardRef, useMemo} from 'react';\nimport {ListItemIcon} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {IRouter} from \"../../../constants/routes.constant\";\n\ninterface ListItemLinkProps {\n    route: IRouter\n}\n\nconst ListItemLink = (props: ListItemLinkProps) => {\n    // get the render item =>\n    const {route} = props;\n    const {path, iconRender, title} = route;\n    // update render Link whenever to change the route\n    const renderLink = useMemo(() => {\n        return forwardRef((itemProps, ref: any) => <RouterLink to={{pathname: path}}\n                                                               ref={ref} {...itemProps}/>);\n    }, [path]);\n    return (\n        <ListItem button component={renderLink}>\n            <ListItemIcon> {iconRender()}</ListItemIcon>\n            <ListItemText primary={title}/>\n        </ListItem>\n    );\n};\nexport default ListItemLink;","import React from \"react\";\nimport Drawer from '@material-ui/core/Drawer';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {drawerWidth} from \"../../constants/default_constants\";\nimport {useDrawerToggleContext} from \"../../context/DrawerOpenProvider/drawerOpenProvider.context\";\nimport {IconButton, ListItemIcon} from \"@material-ui/core\";\nimport {ChevronLeftOutlined} from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport {IRouter, routes} from \"../../constants/routes.constant\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport clsx from \"clsx\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ListItemLink from \"./list_item_link/list_item_link\";\nimport {Switch} from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\"\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // theme.spacing default 8px x 7 for icon\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n            width: theme.spacing(9) + 1\n        },\n        // property specifies whether to clip the content, add a scroll bar, or display overflow content of a block-level element.\n\n        overflowX: \"hidden\"\n\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignContent: 'center',\n        padding: theme.spacing(1, 1),\n\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar\n    }\n}));\n\nconst CustomDrawer = () => {\n    const theme = useStyles();\n    const useDrawerToggle = useDrawerToggleContext();\n\n    return (\n        <Drawer\n            className={clsx(theme.drawer, {\n                [theme.drawerOpen]: useDrawerToggle.open,\n                [theme.drawerClose]: !useDrawerToggle.open\n            })}\n            classes={{\n                paper: clsx({\n                    [theme.drawerOpen]: useDrawerToggle.open,\n                    [theme.drawerClose]: !useDrawerToggle.open,\n                }),\n            }}\n            open={useDrawerToggle.open}\n            variant={'permanent'}\n            anchor={'left'}\n\n        >\n            <div className={theme.toolbar}>\n                <IconButton onClick={() => {\n                    useDrawerToggle.toggleOpen(false);\n                }}>\n                    <ChevronLeftOutlined/>\n                </IconButton>\n            </div>\n            <List>\n                {\n                    routes.map((route: IRouter, index: number) => {\n                            return (<div key={route.title}> <ListItemLink  route={route}/>\n                                    <Divider/>\n                                </div>\n                            );\n                        }\n                    )\n\n                }\n            </List>\n        </Drawer>);\n};\n\nexport default CustomDrawer;","import React, {useRef, useState} from 'react';\nimport Header from './header';\nimport {HashContextProvider, HashValue} from \"../context/hash.context\";\nimport {makeStyles, ThemeProvider, useTheme} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {useDrawerToggleContext} from \"../context/DrawerOpenProvider/drawerOpenProvider.context\";\nimport CustomDrawer from \"../components/custom_drawer/custom_drawer\";\nimport style from './styles.module.scss';\n\ninterface layoutProps {\n    children: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        color: \"white\",\n        height: '100%'\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\nconst MainLayout = (props: layoutProps) => {\n    //set context here so that I dont need to pass prop etc\n    const [hashValue, setHashValue] = useState<HashValue>({hashName: \"\"});\n    const useDrawerToggle = useDrawerToggleContext();\n    const classes = useStyles();\n    // const setHashNavValue = (hashNav: string) => {\n    //     //because this is a new object => and there fore force rerender\n    //     //if use a normal string It wont force rerender because of React\n    //     const newHashValue: HashValue = {hashName: hashNav};\n    //     setHashValue(newHashValue);\n    // };\n\n    return (\n            <div className={style.root}>\n                <Header/>\n                <CustomDrawer/>\n                <HashContextProvider hashValue={hashValue}>\n                    <main className={clsx(classes.content, {[classes.contentShift]: useDrawerToggle.open})}>\n                        {props.children}\n                    </main>\n\n                </HashContextProvider>\n            </div>);\n};\n\nexport default MainLayout;\n","import React from 'react';\nimport './App.css';\nimport MainLayout from \"./layout\";\nimport {BrowserRouter, MemoryRouter, Route, Switch} from 'react-router-dom';\nimport {IRouter, routes} from \"./constants/routes.constant\";\nimport {DrawerToggleProvider} from \"./context/DrawerOpenProvider/drawerOpenProvider.context\";\n\ninterface AppProps {\n}\n\ninterface AppState {\n    open: boolean;\n    toggleOpen: (open: boolean) => void;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    constructor(props: AppProps) {\n        super(props);\n        // toggle open\n        const toggleOpen = (open: boolean) => {\n            this.setState({open: open});\n        };\n        this.state = {\n            open: false,\n            toggleOpen: toggleOpen,\n        }\n    }\n\n    RenderMainRoute = () => {\n        return (\n            <Switch>\n                {\n                    routes.map((route: IRouter, index: number) => {\n                        return (\n                            <Route path={route.path}\n                                   exact={route.exact}\n                                   key={route.title}\n                                   render={() => <route.component/>}\n                            />\n                        );\n                    })\n                }\n            </Switch>\n        );\n    };\n\n    render() {\n        return (\n            <BrowserRouter>\n                <DrawerToggleProvider drawerToggle={this.state}>\n                    <MainLayout>\n                        <this.RenderMainRoute/>\n                    </MainLayout>\n                </DrawerToggleProvider>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2LSWS\",\"my_img\":\"styles_my_img__2IK6f\",\"title_content\":\"styles_title_content__1VrjM\",\"layout_content\":\"styles_layout_content__2CmHI\",\"typewrapper\":\"styles_typewrapper__2CFXV\",\"page_title\":\"styles_page_title__1fZpc\",\"typewriter2\":\"styles_typewriter2__2gB0V\",\"blink\":\"styles_blink__2l_rI\",\"typewriter\":\"styles_typewriter__FEhP2\",\"typing\":\"styles_typing__AeMIY\",\"blink-caret\":\"styles_blink-caret__O1hsh\"};"],"sourceRoot":""}